<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sadness.NPOI.Helper</name>
    </assembly>
    <members>
        <member name="T:NPOI.Helper.Excel.ExcelHelper">
            <summary>
            Excel帮助类
            创建日期:2017年5月27日
            </summary>
        </member>
        <member name="M:NPOI.Helper.Excel.ExcelHelper.CreateExcel_Office2003(System.String,System.String)">
            <summary>
            创建Excel(Office2003)
            </summary>
            <param name="strDataSourcePath">新建Excel的路径.xls</param>
            <param name="strSheetName">Sheet名称,如果为空则创建三个默认Sheet页</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:NPOI.Helper.Excel.ExcelHelper.CreateExcel_Office2007(System.String,System.String)">
            <summary>
            创建Excel(Office2007)
            </summary>
            <param name="strDataSourcePath">新建Excel的路径.xlsx</param>
            <param name="strSheetName">Sheet名称,如果为空则创建三个默认Sheet页</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:NPOI.Helper.Excel.ExcelHelper.CreateExcelSheet(System.String,System.String)">
            <summary>
            在指定Excel中添加分页
            </summary>
            <param name="strDataSourcePath">Excel文件路径</param>
            <param name="strSheetName">需要添加的Sheet名称</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:NPOI.Helper.Excel.ExcelHelper.CreateExcelSheetAt(System.String,System.String,NPOI.SS.UserModel.IWorkbook@)">
            <summary>
            在指定Excel中添加分页
            </summary>
            <param name="strDataSourcePath">Excel文件路径</param>
            <param name="strSheetName">需要添加的Sheet名称</param>
            <returns>成功返回Excel工作表,失败返回null</returns>
        </member>
        <member name="M:NPOI.Helper.Excel.ExcelHelper.RemoveExcelSheet(System.String,System.String)">
            <summary>
            在指定Excel中删除分页(至少有一个Sheet分页文件才能打开)
            </summary>
            <param name="strDataSourcePath">Excel文件路径</param>
            <param name="strSheetName">需要删除的Sheet名称</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:NPOI.Helper.Excel.ExcelHelper.GetExcelAllSheet(System.String)">
            <summary>
            获得指定Excel中所有Sheet
            </summary>
            <param name="strDataSourcePath">Excel文件路径</param>
            <returns>Excel中所有Sheet字典(序号,Sheet名)</returns>
        </member>
        <member name="M:NPOI.Helper.Excel.ExcelHelper.GetExcelSheetAt(System.String,System.String,NPOI.SS.UserModel.IWorkbook@)">
            <summary>
            获得指定Excel中的指定Sheet页
            </summary>
            <param name="strDataSourcePath">Excel文件路径</param>
            <param name="strSheetName">Excel中所有Sheet名</param>
            <returns>成功返回Excel工作表,失败返回null</returns>
        </member>
        <member name="M:NPOI.Helper.Excel.ExcelHelper.GetExcelSheetAt(System.String,System.Int32,NPOI.SS.UserModel.IWorkbook@)">
            <summary>
            获得指定Excel中的指定Sheet页
            </summary>
            <param name="strDataSourcePath">Excel文件路径</param>
            <param name="iNumberOfSheet">Excel中所有Sheet序号</param>
            <returns>成功返回Excel工作表,失败返回null</returns>
        </member>
        <member name="M:NPOI.Helper.Excel.ExcelHelper.FillString(System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            在指定Excel中指定Sheet指定位置填充文本
            </summary>
            <param name="strDataSourcePath">Excel文件路径(如果文件不存在则重新创建)</param>
            <param name="strSheetName">需要填充的Sheet名称(如果没有则添加,如果冲突则使用冲突Sheet)</param>
            <param name="strTXT">需要填充的文本</param>
            <param name="iRows">填充行</param>
            <param name="iColumn">填充列</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:NPOI.Helper.Excel.ExcelHelper.FillDataTable(NPOI.SS.UserModel.ISheet,System.Data.DataTable,System.Boolean,System.Int32,System.Int32)">
            <summary>
            在指定Excel中指定Sheet指定位置填充DataTable(仅拷贝,不提供保存方法)
            </summary>
            <param name="iDataSourceSheet">指定Excel元数据Sheet页</param>
            <param name="dtSourceData">DataTable数据</param>
            <param name="WhetherThereFieldName">是否有列名(true保留DataTable字段名)</param>
            <param name="iRows">起始行</param>
            <param name="iColumn">起始列</param>
            <returns>成功返回拷贝后的Sheet页,失败返回null</returns>
        </member>
        <member name="M:NPOI.Helper.Excel.ExcelHelper.FillDataTable(System.String,System.String,System.Data.DataTable,System.Boolean,System.Int32,System.Int32)">
            <summary>
            在指定Excel中指定Sheet指定位置填充DataTable
            </summary>
            <param name="strDataSourcePath">Excel文件路径(如果文件不存在则重新创建)</param>
            <param name="strSheetName">需要填充的Sheet名称(如果没有则添加,如果冲突则使用冲突Sheet)</param>
            <param name="dtSourceData">DataTable数据</param>
            <param name="WhetherThereFieldName">是否有列名(true保留DataTable字段名)</param>
            <param name="iRows">起始行</param>
            <param name="iColumn">起始列</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:NPOI.Helper.Excel.ExcelHelper.DataTableConversionExcel(System.String,System.Data.DataTable)">
            <summary>
            DataTable转换为Excel
            存在文件则新建DataTableName的分页(如果分页名冲突则或为空则使用默认名称)
            不存在文件则新建(Excel,名称为DataTableName,如果没有则使用默认名称)
            </summary>
            <param name="strDataSourcePath">Excel文件路径</param>
            <param name="dtSourceData">DataTable数据</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:NPOI.Helper.Excel.ExcelHelper.DataSetConversionExcel(System.String,System.Data.DataSet)">
            <summary>
            DataSet转换为Excel
            存在文件则新建DataTableName的分页(如果分页名冲突则或为空则使用默认名称)
            不存在文件则新建(Excel,名称为DataTableName,如果没有则使用默认名称)
            </summary>
            <param name="strDataSourcePath">Excel文件路径</param>
            <param name="dsSourceData">DataTable数据</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:NPOI.Helper.Excel.ExcelHelper.GetDataTable(NPOI.SS.UserModel.ISheet,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            获得指定Excel指定分页指定起始终止位置的DataTable
            </summary>
            <param name="iDataSourceSheet">指定Excel元数据Sheet页</param>
            <param name="WhetherThereFieldName">是否有列名(true保留DataTable字段名)</param>
            <param name="iStartRows">起始行</param>
            <param name="iStartColumn">起始列</param>
            <param name="iStopRows">终止行(如果小于等于0则默认Length)</param>
            <param name="iStopColumn">终止列(如果小于等于0则默认Length)</param>
            <returns>成功返回Excel的DataTable,失败返回NULL</returns>
        </member>
        <member name="M:NPOI.Helper.Excel.ExcelHelper.GetDataTable(System.String,System.String,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            获得指定Excel指定分页指定起始终止位置的DataTable
            </summary>
            <param name="strDataSourcePath">Excel文件路径</param>
            <param name="strSheetName">分页Sheet名称</param>
            <param name="WhetherThereFieldName">是否有列名(true保留DataTable字段名)</param>
            <param name="iStartRows">起始行</param>
            <param name="iStartColumn">起始列</param>
            <param name="iStopRows">终止行(如果小于等于0则默认Length)</param>
            <param name="iStopColumn">终止列(如果小于等于0则默认Length)</param>
            <returns>成功返回Excel的DataTable,失败返回NULL</returns>
        </member>
        <member name="M:NPOI.Helper.Excel.ExcelHelper.ExcelConversionDataTable(System.String,System.String)">
            <summary>
            Excel指定分页转换为DataTable(如果分页为空,默认第一个分页)
            </summary>
            <param name="strDataSourcePath">Excel文件路径</param>
            <param name="strSheetName">分页Sheet名称</param>
            <returns>成功返回Excel的DataTable,失败返回NULL</returns>
        </member>
        <member name="M:NPOI.Helper.Excel.ExcelHelper.ExcelConversionDataSet(System.String)">
            <summary>
            Excel所有分页转换为DataSet
            </summary>
            <param name="strDataSourcePath">Excel文件路径</param>
            <returns>成功返回Excel的DataSet,失败返回NULL</returns>
        </member>
        <member name="M:NPOI.Helper.Excel.ExcelHelper.CopySheetAt(NPOI.SS.UserModel.IWorkbook,NPOI.SS.UserModel.ISheet,NPOI.SS.UserModel.IWorkbook,NPOI.SS.UserModel.ISheet)">
            <summary>
            拷贝Sheet页到另一个Sheet页(浅拷贝,不提供保存方法)
            Office2003单Sheet页仅支持4000个样式
            </summary>
            <param name="iSourceWorkbook">源Excel工作簿</param>
            <param name="iFromSheet">源Sheet页</param>
            <param name="iTargetWorkbook">目标Excel工作簿</param>
            <param name="iToSheet">目标Sheet页</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:NPOI.Helper.Excel.ExcelHelper.CopySheet(System.String,System.String,System.String,System.String)">
            <summary>
            拷贝Sheet页到另一个Sheet页
            </summary>
            <param name="strSourceExcelPath">源Excel路径</param>
            <param name="strFromSheetName">源Excel拷贝Sheet</param>
            <param name="strTargetExcelPath">目标Excel路径</param>
            <param name="strToSheetName">目标Excel拷贝Sheet</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="T:NPOI.Helper.TXT.TXTHelper">
            <summary>
            TXT文本帮助类
            创建日期:2016年12月8日
            </summary>
        </member>
        <member name="M:NPOI.Helper.TXT.TXTHelper.WriteFile(System.String,System.String)">
            <summary>
            写入文本到TXT(如果有文件不进行操作)
            </summary>
            <param name="strPath">TXT储存路径</param>
            <param name="strTXT">文本内容</param>
            <returns>成功返回0,失败返回-1</returns>
        </member>
        <member name="M:NPOI.Helper.TXT.TXTHelper.WriteFile(System.String,System.String,System.Boolean)">
            <summary>
            写入文本到TXT(选择是否覆盖)
            </summary>
            <param name="strPath">TXT储存路径</param>
            <param name="strTXT">文本内容</param>
            <param name="boolCover">(true)如果冲突覆盖文件,(false)如果冲突不进行操作</param>
            <returns>成功返回0,失败返回-1</returns>
        </member>
        <member name="M:NPOI.Helper.TXT.TXTHelper.AppendFile(System.String,System.String)">
            <summary>
            写入文本到TXT,追加写入文件(如果不存在自动创建)
            </summary>
            <param name="strPath">TXT储存路径</param>
            <param name="strTXT">文本内容</param>
            <returns>成功返回0,失败返回-1</returns>
        </member>
        <member name="M:NPOI.Helper.TXT.TXTHelper.AppendFile(System.String,System.String,System.Boolean)">
            <summary>
            写入文本到TXT,追加写入文件(如果不存在自动创建)(是否换行)
            </summary>
            <param name="strPath">TXT储存路径</param>
            <param name="strTXT">文本内容</param>
            <param name="boolWrap">(true)换行,(false)不换行</param>
            <returns>成功返回0,失败返回-1</returns>
        </member>
        <member name="M:NPOI.Helper.TXT.TXTHelper.Logs(System.String)">
            <summary>
            ADO.Helper帮助类日志文件
            </summary>
            <param name="strLogs">异常信息</param>
            <returns>成功返回0,失败返回-1</returns>
        </member>
        <member name="M:NPOI.Helper.TXT.TXTHelper.GetFileString(System.String)">
            <summary>
            读取TXT文件中的文本
            </summary>
            <param name="strPath">TXT文件路径</param>
            <returns>TXT文件中的文本</returns>
        </member>
        <member name="M:NPOI.Helper.TXT.TXTHelper.GetFileArray(System.String)">
            <summary>
            读取TXT文件中的文本(按照每行存到string[]中)
            </summary>
            <param name="strPath">TXT文件路径</param>
            <returns>TXT文件中的文本(string[])</returns>
        </member>
        <member name="M:NPOI.Helper.TXT.TXTHelper.GetFileList(System.String)">
            <summary>
            读取TXT文件中的文本(按照每行存到listString中)
            </summary>
            <param name="strPath">TXT文件路径</param>
            <returns>TXT文件中的文本(listString)</returns>
        </member>
        <member name="T:NPOI.Helper.Word.ReplaceLabelModel">
            <summary>
            替换Word模板Model
            创建日期:2017年6月15日
            </summary>
        </member>
        <member name="P:NPOI.Helper.Word.ReplaceLabelModel.strLabelName">
            <summary>
            替换标签名称
            </summary>
        </member>
        <member name="P:NPOI.Helper.Word.ReplaceLabelModel.lableType">
            <summary>
            替换标签类型
            </summary>
        </member>
        <member name="P:NPOI.Helper.Word.ReplaceLabelModel.strReplaceText">
            <summary>
            替换的文本
            </summary>
        </member>
        <member name="P:NPOI.Helper.Word.ReplaceLabelModel.strReplaceImagePath">
            <summary>
            替换的图片路径
            </summary>
        </member>
        <member name="P:NPOI.Helper.Word.ReplaceLabelModel.dtReplaceData">
            <summary>
            替换的表格
            </summary>
        </member>
        <member name="T:NPOI.Helper.Word.ReplaceLabelType">
            <summary>
            替换Word模板数据类型枚举类
            创建日期:2017年6月5日
            </summary>
        </member>
        <member name="F:NPOI.Helper.Word.ReplaceLabelType.LabelType.Text">
            <summary>
            文本类型,一个标签替换一个文本
            </summary>
        </member>
        <member name="F:NPOI.Helper.Word.ReplaceLabelType.LabelType.DataTable">
            <summary>
            DataTable表格类型,替换表格中的一组数据
            </summary>
        </member>
        <member name="F:NPOI.Helper.Word.ReplaceLabelType.LabelType.Image">
            <summary>
            图片类型,一个标签替换一张图片
            </summary>
        </member>
        <member name="T:NPOI.Helper.Word.WordHelper">
            <summary>
            Word帮助类
            创建日期:2017年6月2日
            </summary>
        </member>
        <member name="M:NPOI.Helper.Word.WordHelper.CreateWord_Office2003(System.String)">
            <summary>
            创建Word(Office2003)
            </summary>
            <param name="strDataSourcePath">新建Excel的路径.doc</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:NPOI.Helper.Word.WordHelper.CreateWord_Office2007(System.String)">
            <summary>
            创建Word(Office2007)
            </summary>
            <param name="strDataSourcePath">新建Excel的路径.doc</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:NPOI.Helper.Word.WordHelper.GetWordParagraphText(System.String)">
            <summary>
            获得Word文档中所有段落
            </summary>
            <param name="strDataSourcePath">Excel文件路径</param>
            <returns>段落标签List</returns>
        </member>
        <member name="M:NPOI.Helper.Word.WordHelper.GetWordTableText(System.String)">
            <summary>
            获得Word文档中所有表格
            </summary>
            <param name="strDataSourcePath">Excel文件路径</param>
            <returns>段落标签List</returns>
        </member>
        <member name="M:NPOI.Helper.Word.WordHelper.GetWordAllText(System.String)">
            <summary>
            获得Word文档中所有文本
            </summary>
            <param name="strDataSourcePath">Excel文件路径</param>
            <returns>所有文本List</returns>
        </member>
        <member name="M:NPOI.Helper.Word.WordHelper.GetWordAllLable(System.String)">
            <summary>
            获得Word文档中所有替换标签('{标签}','#标签#')
            </summary>
            <param name="strDataSourcePath">Excel文件路径</param>
            <returns>替换标签Dictionary(带标签,不带标签)</returns>
        </member>
        <member name="M:NPOI.Helper.Word.WordHelper.MatchingReplaceLabel(System.String,System.String,System.String)">
            <summary>
            匹配替换标签
            </summary>
            <param name="strText">需要匹配的文本</param>
            <param name="strStartSymbol">起始符号</param>
            <param name="strStopSymbol">终止符号</param>
            <returns>匹配成功的标签(带标签,不带标签)</returns>
        </member>
        <member name="M:NPOI.Helper.Word.WordHelper.ReplaceTextLabel(System.String,System.String,System.String)">
            <summary>
            替换文本标签
            </summary>
            <param name="strDataSourcePath">Excel文件路径</param>
            <param name="strLabelName">标签名称(带标签符号)</param>
            <param name="strReplaceLabel">替换标签文本</param>
            <returns>成功返回替换数量,失败返回-1</returns>
        </member>
        <member name="M:NPOI.Helper.Word.WordHelper.ReplaceDataTableLabel(System.String,System.String,System.Data.DataTable)">
            <summary>
            替换表格标签(DataTable替换)
            </summary>
            <param name="strDataSourcePath">Excel文件路径</param>
            <param name="strLabelName">标签名称(带标签符号)</param>
            <param name="dtReplaceLabel">替换标签DataTable</param>
            <returns>成功返回1,失败返回-1</returns>
        </member>
        <member name="M:NPOI.Helper.Word.WordHelper.ReplaceImageLabel(System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            替换图片标签(使用DocX.dll类库,调用这个方法后NPOI无法读取文档)
            </summary>
            <param name="strDataSourcePath">Excel文件路径</param>
            <param name="strLabelName">标签名称(带标签符号)</param>
            <param name="strImagePath">替换的图片路径</param>
            <param name="iImageWidth">替换的图片宽度(小于0则显示原图宽度)</param>
            <param name="iImageHeight">替换的图片高度(小于0则显示原图高度)</param>
            <returns>成功返回替换数量,失败返回-1</returns>
        </member>
        <member name="M:NPOI.Helper.Word.WordHelper.ReplaceLabel(System.String,System.Collections.Generic.List{NPOI.Helper.Word.ReplaceLabelModel})">
            <summary>
            替换Word文档标签
            </summary>
            <param name="strDataSourcePath">Excel文件路径</param>
            <param name="listReplaceLabel">替换标签对应的替换内容(不带标签,替换内容Model)</param>
            <returns>成功返回替换行数,失败返回-1</returns>
        </member>
    </members>
</doc>
