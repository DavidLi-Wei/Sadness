<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sadness.FileIO.Helper</name>
    </assembly>
    <members>
        <member name="T:FileIO.Helper.BinaryFile.BinaryFileHelper">
            <summary>
            二进制文件帮助类
            创建日期:2017年6月2日
            </summary>
        </member>
        <member name="M:FileIO.Helper.BinaryFile.BinaryFileHelper.GetBinaryDataFromFilePath(System.String)">
            <summary>
            通过文件路径获得二进制文件
            </summary>
            <param name="strFilePath">文件路径</param>
            <returns>二进制文件</returns>
        </member>
        <member name="M:FileIO.Helper.BinaryFile.BinaryFileHelper.GetFilePathFromBinaryData(System.Byte[],System.String)">
            <summary>
            通过二进制文件保存文件到指定路径
            </summary>
            <param name="BinaryData">二进制文件</param>
            <param name="strFilePath">文件路径</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="T:FileIO.Helper.FileSharing.FileSharingHelper">
            <summary>
            FileSharing文件共享帮助类
            创建日期:2017年5月23日
            </summary>
        </member>
        <member name="M:FileIO.Helper.FileSharing.FileSharingHelper.InquireShareFile">
            <summary>
            读取共享文件信息
            </summary>
            <returns>共享信息DataTable('name':'共享文件名称','path':'共享文件路径','permissions':'访问控制权限','type':'共享文件属性')</returns>
        </member>
        <member name="M:FileIO.Helper.FileSharing.FileSharingHelper.AddShareFolder(System.String,System.String,System.String)">
            <summary>
            新增共享
            </summary>
            <param name="FolderPath">共享文件路径</param>
            <param name="ShareName">共享文件名称</param>
            <param name="Permissions">访问控制权限('完全控制':'FULL','只读':'READ','读取/写入':'CHANGE')</param>
            <returns>成功返回0,失败返回-1</returns>
        </member>
        <member name="M:FileIO.Helper.FileSharing.FileSharingHelper.AddShareFolder(System.String,System.String,FileIO.Helper.FileSharing.SharingPermissions.PermissionsType)">
            <summary>
            新增共享
            </summary>
            <param name="FolderPath">共享文件路径</param>
            <param name="ShareName">共享文件名称</param>
            <param name="PermissionsType">访问控制权限(枚举)</param>
            <returns>成功返回0,失败返回-1</returns>
        </member>
        <member name="M:FileIO.Helper.FileSharing.FileSharingHelper.DeleteShareFolder(System.String)">
            <summary>
            删除共享
            </summary>
            <param name="FolderPath">共享文件夹路径</param>
            <returns>成功返回0,失败返回-1</returns>
        </member>
        <member name="M:FileIO.Helper.FileSharing.FileSharingHelper.ImplementationCMD(System.String)">
            <summary>
            执行CMD命令
            </summary>
            <param name="cmd">cmd命令</param>
            <returns>cmd窗口的输出信息</returns>
        </member>
        <member name="T:FileIO.Helper.FileSharing.SharingPermissions">
            <summary>
            共享文件访问权限枚举类
            创建日期:2017年5月23日
            </summary>
        </member>
        <member name="T:FileIO.Helper.FileSharing.SharingPermissions.PermissionsType">
            <summary>
            共享文件访问权限。
            </summary>
        </member>
        <member name="F:FileIO.Helper.FileSharing.SharingPermissions.PermissionsType.FULL">
            <summary>
            完全控制
            </summary>
        </member>
        <member name="F:FileIO.Helper.FileSharing.SharingPermissions.PermissionsType.READ">
            <summary>
            只读
            </summary>
        </member>
        <member name="F:FileIO.Helper.FileSharing.SharingPermissions.PermissionsType.CHANGE">
            <summary>
            读取/写入
            </summary>
        </member>
        <member name="T:FileIO.Helper.Folder.FolderHelper">
            <summary>
            Folder文件夹帮助类
            创建日期:2017年5月8日
            </summary>
        </member>
        <member name="M:FileIO.Helper.Folder.FolderHelper.GetSpecifiedDirectoryFiles(System.String)">
            <summary>
            获得指定路径下文件的路径和文件名
            </summary>
            <param name="strPath">文件夹路径</param>
            <returns>成功返回文件全路径或文件名,失败返回NULL</returns>
        </member>
        <member name="M:FileIO.Helper.Folder.FolderHelper.GetSpecifiedDirectoryAllFiles(System.String)">
            <summary>
            获得指定路径下所有文件的路径和文件名
            </summary>
            <param name="strPath">文件夹路径</param>
            <returns>成功返回文件全路径或文件名,失败返回NULL</returns>
        </member>
        <member name="M:FileIO.Helper.Folder.FolderHelper.GetSpecifiedDirectoryFiles(System.String,System.String)">
            <summary>
            获得指定路径下文件的路径和文件名(限定后缀名)
            </summary>
            <param name="strPath">文件夹路径</param>
            <param name="strSuffixName">限定后缀名,如:"*.txt"、"*.xml"</param>
            <returns>成功返回文件全路径或文件名,失败返回NULL</returns>
        </member>
        <member name="M:FileIO.Helper.Folder.FolderHelper.GetSpecifiedDirectoryAllFiles(System.String,System.String)">
            <summary>
            获得指定路径下文件的路径和文件名(限定后缀名)
            </summary>
            <param name="strPath">文件夹路径</param>
            <param name="strSuffixName">限定后缀名,如:"*.txt"、"*.xml"</param>
            <returns>成功返回文件全路径或文件名,失败返回NULL</returns>
        </member>
        <member name="M:FileIO.Helper.Folder.FolderHelper.GetSpecifiedDirectoryFolders(System.String)">
            <summary>
            获得指定路径下文件夹的路径和文件夹名
            </summary>
            <param name="strPath">文件夹路径</param>
            <returns>成功返回文件全路径或文件名,失败返回NULL</returns>
        </member>
        <member name="M:FileIO.Helper.Folder.FolderHelper.GetSpecifiedDirectoryAllFolders(System.String)">
            <summary>
            获得指定路径下所有文件夹的路径和文件夹名
            </summary>
            <param name="strPath">文件夹路径</param>
            <returns>成功返回文件全路径或文件名,失败返回NULL</returns>
        </member>
        <member name="T:FileIO.Helper.FTPSharing.FTPListTypeModel">
            <summary>
            FTP-FTP-LIST命令返回参数数据模型
            创建日期:2017年5月25日
            </summary>
        </member>
        <member name="P:FileIO.Helper.FTPSharing.FTPListTypeModel.FileType">
            <summary>
            文件类型 位数(1)
            d 文件夹/- 普通文件/l 链接/b 块设备文件/p 管道文件/c 字符设备文件/s 套接口文件
            </summary>
        </member>
        <member name="P:FileIO.Helper.FTPSharing.FTPListTypeModel.UserOwnership">
            <summary>
            文件属主拥有权限 位数(2-4)
            r 读/w 写/x 执行
            </summary>
        </member>
        <member name="P:FileIO.Helper.FTPSharing.FTPListTypeModel.GroupUserOwnership">
            <summary>
            文件属主同一组用户拥有权限 位数(5-7)
            r 读/w 写/x 执行
            </summary>
        </member>
        <member name="P:FileIO.Helper.FTPSharing.FTPListTypeModel.OtherUserOwnership">
            <summary>
            其他用户拥有权限 位数(8-10)
            r 读/w 写/x 执行
            </summary>
        </member>
        <member name="P:FileIO.Helper.FTPSharing.FTPListTypeModel.UnknownParameter1">
            <summary>
            未知参数1 (1)
            </summary>
        </member>
        <member name="P:FileIO.Helper.FTPSharing.FTPListTypeModel.UnknownParameter2">
            <summary>
            未知参数2 (user)
            </summary>
        </member>
        <member name="P:FileIO.Helper.FTPSharing.FTPListTypeModel.UnknownParameter3">
            <summary>
            未知参数3 (group)
            </summary>
        </member>
        <member name="P:FileIO.Helper.FTPSharing.FTPListTypeModel.FileSize">
            <summary>
            文件大小(文件夹为0)
            </summary>
        </member>
        <member name="P:FileIO.Helper.FTPSharing.FTPListTypeModel.FileMonth">
            <summary>
            文件月份
            </summary>
        </member>
        <member name="P:FileIO.Helper.FTPSharing.FTPListTypeModel.FileDay">
            <summary>
            文件日期
            </summary>
        </member>
        <member name="P:FileIO.Helper.FTPSharing.FTPListTypeModel.FileYearOrTime">
            <summary>
            文件年份或时间
            </summary>
        </member>
        <member name="P:FileIO.Helper.FTPSharing.FTPListTypeModel.FileName">
            <summary>
            文件名称
            </summary>
        </member>
        <member name="T:FileIO.Helper.FTPSharing.FTPSharingHelper">
            <summary>
            FTPSharing文件共享帮助类(基于Serv-U搭建的FTP)
            创建日期:2017年5月24日
            </summary>
        </member>
        <member name="F:FileIO.Helper.FTPSharing.FTPSharingHelper.Request">
            <summary>  
            实现了文件传输协议(FTP)客户端
            </summary>  
        </member>
        <member name="M:FileIO.Helper.FTPSharing.FTPSharingHelper.FTPConnectionURL(System.String,System.String,System.String)">
            <summary>
            FTP连接URL
            </summary>
            <param name="FTPServerURL">FTP服务器URL(统一资源定位符)</param>
            <param name="FTPServerUserID">FTP服务器用户名</param>
            <param name="FTPServerPassword">FTP服务器用户密码</param>
        </member>
        <member name="M:FileIO.Helper.FTPSharing.FTPSharingHelper.FTPConnectionURL(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            FTP连接URL
            </summary>
            <param name="FTPServerIP">FTP服务器IP地址</param>
            <param name="FTPServerPort">FTP服务器端口号</param>
            <param name="FTPServerPath">FTP服务器路径</param>
            <param name="FTPServerUserID">FTP服务器用户名</param>
            <param name="FTPServerPassword">FTP服务器用户密码</param>
        </member>
        <member name="M:FileIO.Helper.FTPSharing.FTPSharingHelper.GetFilesDetailList">
            <summary>
            获得URL路径下文件列表
            </summary>
            <returns>文件列表List</returns>
        </member>
        <member name="M:FileIO.Helper.FTPSharing.FTPSharingHelper.GetFoldersDetailList">
            <summary>
            获得URL路径下文件夹列表
            </summary>
            <returns>文件列表List</returns>
        </member>
        <member name="M:FileIO.Helper.FTPSharing.FTPSharingHelper.GetFolderOrFileType(System.String)">
            <summary>
            获得指定URL路径下指定文件属性
            </summary>
            <param name="strFileName">URL中指定文件名</param>
            <returns>FTP-FTP-LIST命令返回参数数据模型,失败返回NULL</returns>
        </member>
        <member name="M:FileIO.Helper.FTPSharing.FTPSharingHelper.CreateFolder(System.String)">
            <summary>
            新建URL路径下文件夹
            </summary>
            <param name="strFolderName">文件夹名称</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:FileIO.Helper.FTPSharing.FTPSharingHelper.DeleteFile(System.String)">
            <summary>
            删除URL路径下指定文件
            </summary>
            <param name="strFileName">URL中指定文件名</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:FileIO.Helper.FTPSharing.FTPSharingHelper.DeleteFolder(System.String)">
            <summary>
            删除URL路径下指定文件夹
            </summary>
            <param name="strFolderName">文件夹名</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:FileIO.Helper.FTPSharing.FTPSharingHelper.UploadFile(System.String)">
            <summary>
            上传文件到指定URL路径
            </summary>
            <param name="strFilePath">需要上传的文件路径</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:FileIO.Helper.FTPSharing.FTPSharingHelper.DownloadFile(System.String,System.String)">
            <summary>
            下载指定URL中的文件到指定路径
            </summary>
            <param name="strFilePath">文件下载到的路径</param>
            <param name="strFileName">URL中指定文件名</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:FileIO.Helper.FTPSharing.FTPSharingHelper.AnalysisLISTCommand(System.String)">
            <summary>
            解析FTP-LIST命令
            </summary>
            <param name="strListCommand">FTP-LIST命令</param>
        </member>
        <member name="P:FileIO.Helper.FTPSharing.FTPSharingHelper.strFTPServerURL">
            <summary>
            FTP服务器URL(统一资源定位符)
            </summary>
        </member>
        <member name="P:FileIO.Helper.FTPSharing.FTPSharingHelper.strFTPServerIP">
            <summary>
            FTP服务器IP地址
            </summary>
        </member>
        <member name="P:FileIO.Helper.FTPSharing.FTPSharingHelper.strFTPServerPort">
            <summary>
            FTP服务器端口号
            </summary>
        </member>
        <member name="P:FileIO.Helper.FTPSharing.FTPSharingHelper.strFTPServerPath">
            <summary>
            FTP服务器路径
            </summary>
        </member>
        <member name="P:FileIO.Helper.FTPSharing.FTPSharingHelper.strFTPServerUserID">
            <summary>
            FTP服务器用户名
            </summary>
        </member>
        <member name="P:FileIO.Helper.FTPSharing.FTPSharingHelper.strFTPServerPassword">
            <summary>
            FTP服务器用户密码
            </summary>
        </member>
        <member name="T:FileIO.Helper.INI.INIHelper">
            <summary>
            INI文本帮助类
            创建日期:2017年5月10日
            </summary>
        </member>
        <member name="M:FileIO.Helper.INI.INIHelper.GetPrivateProfileSectionNames(System.IntPtr,System.UInt32,System.String)">
            <summary>
            获取所有节点名称(Section)
            </summary>
            <param name="lpszReturnBuffer">存放节点名称的内存地址,每个节点之间用\0分隔</param>
            <param name="nSize">内存大小(characters)</param>
            <param name="lpFileName">Ini文件</param>
            <returns>内容的实际长度,为0表示没有内容,为nSize-2表示内存大小不够</returns>
        </member>
        <member name="M:FileIO.Helper.INI.INIHelper.GetPrivateProfileSection(System.String,System.IntPtr,System.UInt32,System.String)">
            <summary>
            获取某个指定节点(Section)中所有KEY和Value
            </summary>
            <param name="lpAppName">节点名称</param>
            <param name="lpReturnedString">返回值的内存地址,每个之间用\0分隔</param>
            <param name="nSize">内存大小(characters)</param>
            <param name="lpFileName">Ini文件</param>
            <returns>内容的实际长度,为0表示没有内容,为nSize-2表示内存大小不够</returns>
        </member>
        <member name="M:FileIO.Helper.INI.INIHelper.GetPrivateProfileString(System.String,System.String,System.String,System.Char[],System.UInt32,System.String)">
            <summary>
            读取INI文件中指定的Key的值
            </summary>
            <param name="lpAppName">节点名称.如果为null,则读取INI中所有节点名称,每个节点名称之间用\0分隔</param>
            <param name="lpKeyName">Key名称.如果为null,则读取INI中指定节点中的所有KEY,每个KEY之间用\0分隔</param>
            <param name="lpDefault">读取失败时的默认值</param>
            <param name="lpReturnedString">读取的内容缓冲区,读取之后,多余的地方使用\0填充</param>
            <param name="nSize">内容缓冲区的长度</param>
            <param name="lpFileName">INI文件名</param>
            <returns>实际读取到的长度</returns>
        </member>
        <member name="M:FileIO.Helper.INI.INIHelper.GetPrivateProfileString(System.String,System.String,System.String,System.Text.StringBuilder,System.UInt32,System.String)">
            <summary>
            另一种声明方式,使用 StringBuilder 作为缓冲区类型的缺点是不能接受\0字符,会将\0及其后的字符截断,所以对于lpAppName或lpKeyName为null的情况就不适用
            </summary>
            <param name="lpAppName">节点名称.如果为null,则读取INI中所有节点名称,每个节点名称之间用\0分隔</param>
            <param name="lpKeyName">Key名称.如果为null,则读取INI中指定节点中的所有KEY,每个KEY之间用\0分隔</param>
            <param name="lpDefault">读取失败时的默认值</param>
            <param name="lpReturnedString">读取的内容缓冲区,读取之后,多余的地方使用\0填充</param>
            <param name="nSize">内容缓冲区的长度</param>
            <param name="lpFileName">INI文件名</param>
            <returns>实际读取到的长度</returns>
        </member>
        <member name="M:FileIO.Helper.INI.INIHelper.GetPrivateProfileString(System.String,System.String,System.String,System.String,System.UInt32,System.String)">
            <summary>
            再一种声明,使用string作为缓冲区的类型同char[]
            </summary>
            <param name="lpAppName">节点名称.如果为null,则读取INI中所有节点名称,每个节点名称之间用\0分隔</param>
            <param name="lpKeyName">Key名称.如果为null,则读取INI中指定节点中的所有KEY,每个KEY之间用\0分隔</param>
            <param name="lpDefault">读取失败时的默认值</param>
            <param name="lpReturnedString">读取的内容缓冲区,读取之后,多余的地方使用\0填充</param>
            <param name="nSize">内容缓冲区的长度</param>
            <param name="lpFileName">INI文件名</param>
            <returns>实际读取到的长度</returns>
        </member>
        <member name="M:FileIO.Helper.INI.INIHelper.WritePrivateProfileSection(System.String,System.String,System.String)">
            <summary>
            将指定的键值对写到指定的节点,如果已经存在则替换.
            </summary>
            <param name="lpAppName">节点,如果不存在此节点,则创建此节点</param>
            <param name="lpString">Item键值对,多个用\0分隔,形如key1=value1\0key2=value2;如果为string.Empty,则删除指定节点下的所有内容,保留节点;如果为null,则删除指定节点下的所有内容,并且删除该节点</param>
            <param name="lpFileName">INI文件</param>
            <returns>是否成功写入</returns>
        </member>
        <member name="M:FileIO.Helper.INI.INIHelper.WritePrivateProfileString(System.String,System.String,System.String,System.String)">
            <summary>
            将指定的键和值写到指定的节点，如果已经存在则替换
            </summary>
            <param name="lpAppName">节点名称</param>
            <param name="lpKeyName">键名称。如果为null，则删除指定的节点及其所有的项目</param>
            <param name="lpString">值内容。如果为null，则删除指定节点中指定的键。</param>
            <param name="lpFileName">INI文件</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:FileIO.Helper.INI.INIHelper.INIGetAllSectionNames(System.String)">
            <summary>
            读取INI文件中指定INI文件中的所有节点名称(Section)
            </summary>
            <param name="iniFile">Ini文件</param>
            <returns>所有节点,没有内容返回string[0]</returns>
        </member>
        <member name="M:FileIO.Helper.INI.INIHelper.INIGetAllItems(System.String,System.String)">
            <summary>
            获取INI文件中指定节点(Section)中的所有条目(key=value形式)
            </summary>
            <param name="iniFile">Ini文件</param>
            <param name="section">节点名称</param>
            <returns>指定节点中的所有项目,没有内容返回string[0]</returns>
        </member>
        <member name="M:FileIO.Helper.INI.INIHelper.INIGetAllItemKeys(System.String,System.String)">
            <summary>
            获取INI文件中指定节点(Section)中的所有条目的Key列表
            </summary>
            <param name="iniFile">Ini文件</param>
            <param name="section">节点名称</param>
            <returns>如果没有内容,反回string[0]</returns>
        </member>
        <member name="M:FileIO.Helper.INI.INIHelper.INIGetStringValue(System.String,System.String,System.String,System.String)">
            <summary>
            读取INI文件中指定KEY的字符串型值
            </summary>
            <param name="iniFile">Ini文件</param>
            <param name="section">节点名称</param>
            <param name="key">键名称</param>
            <param name="defaultValue">如果没此KEY所使用的默认值</param>
            <returns>读取到的值</returns>
        </member>
        <member name="M:FileIO.Helper.INI.INIHelper.INIWriteItems(System.String,System.String,System.String)">
            <summary>
            在INI文件中,将指定的键值对写到指定的节点,如果已经存在则替换
            </summary>
            <param name="iniFile">INI文件</param>
            <param name="section">节点,如果不存在此节点,则创建此节点</param>
            <param name="items">键值对,多个用\0分隔,形如key1=value1\0key2=value2</param>
            <returns></returns>
        </member>
        <member name="M:FileIO.Helper.INI.INIHelper.INIWriteValue(System.String,System.String,System.String,System.String)">
            <summary>
            在INI文件中,指定节点写入指定的键及值.如果已经存在,则替换.如果没有则创建.
            </summary>
            <param name="iniFile">INI文件</param>
            <param name="section">节点</param>
            <param name="key">键</param>
            <param name="value">值</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:FileIO.Helper.INI.INIHelper.INIDeleteKey(System.String,System.String,System.String)">
            <summary>
            在INI文件中,删除指定节点中的指定的键.
            </summary>
            <param name="iniFile">INI文件</param>
            <param name="section">节点</param>
            <param name="key">键</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:FileIO.Helper.INI.INIHelper.INIDeleteSection(System.String,System.String)">
            <summary>
            在INI文件中,删除指定的节点.
            </summary>
            <param name="iniFile">INI文件</param>
            <param name="section">节点</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:FileIO.Helper.INI.INIHelper.INIEmptySection(System.String,System.String)">
            <summary>
            在INI文件中,删除指定节点中的所有内容.
            </summary>
            <param name="iniFile">INI文件</param>
            <param name="section">节点</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="T:FileIO.Helper.Json.DataTableModel">
            <summary>
            DataTable数据模型
            创建日期:2017年5月23日
            </summary>
        </member>
        <member name="P:FileIO.Helper.Json.DataTableModel.TableName">
            <summary>
            DataTable表名
            </summary>
        </member>
        <member name="P:FileIO.Helper.Json.DataTableModel.dicFieldNameType">
            <summary>
            数据库表字段名和字段类型
            </summary>
        </member>
        <member name="P:FileIO.Helper.Json.DataTableModel.dtSourceData">
            <summary>
            DataTable数据
            </summary>
        </member>
        <member name="T:FileIO.Helper.Json.JsonHelper">
            <summary>
            Json文本帮助类
            创建日期:2017年5月22日
            </summary>
        </member>
        <member name="M:FileIO.Helper.Json.JsonHelper.SerializeObject(System.Object)">
            <summary>
            序列化对象
            </summary>
            <param name="value">要序列化的对象</param>
            <returns>对象的JSON字符串表示形式</returns>
        </member>
        <member name="M:FileIO.Helper.Json.JsonHelper.DeserializeObject``1(System.String)">
            <summary>
            反序列化对象
            </summary>
            <typeparam name="T">反序列化对象的类型</typeparam>
            <param name="value">反序列化的JSON</param>
            <returns>反序列化对象的JSON字符串</returns>
        </member>
        <member name="M:FileIO.Helper.Json.JsonHelper.DataTableConversionJson(System.Data.DataTable,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            DataTable转换为Json
            </summary>
            <param name="dtSourceData">DataTable数据</param>
            <param name="dicFieldNameType">数据库表字段名和字段类型</param>
            <returns>对象的JSON字符串表示形式</returns>
        </member>
        <member name="M:FileIO.Helper.Json.JsonHelper.DataSetConversionJson(System.Data.DataSet,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.String}})">
            <summary>
            DataSet转换为Json
            </summary>
            <param name="dsSourceData">DataTable数据</param>
            <param name="diclistFieldNameType">数据库表字段名和字段类型</param>
            <returns>对象的JSON字符串表示形式</returns>
        </member>
        <member name="M:FileIO.Helper.Json.JsonHelper.JsonConversionDataTable(System.String,System.Collections.Generic.Dictionary{System.String,System.String}@)">
            <summary>
            Json转换为DataTable
            </summary>
            <param name="strJson">反序列化对象</param>
            <param name="dicFieldNameType">返回Json的数据库表字段名和字段类型</param>
            <returns>成功返回Json的DataTable,失败返回NULL</returns>
        </member>
        <member name="M:FileIO.Helper.Json.JsonHelper.JsonConversionDataSet(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.String}}@)">
            <summary>
            Json转换为DataSet
            </summary>
            <param name="strJson">反序列化对象</param>
            <param name="diclistFieldNameType">返回Json的数据库表字段名和字段类型</param>
            <returns>成功返回Json的DataSet,失败返回NULL</returns>
        </member>
        <member name="T:FileIO.Helper.TXT.TXTHelper">
            <summary>
            TXT文本帮助类
            创建日期:2016年12月8日
            </summary>
        </member>
        <member name="M:FileIO.Helper.TXT.TXTHelper.WriteFile(System.String,System.String)">
            <summary>
            写入文本到TXT(如果有文件不进行操作)
            </summary>
            <param name="strPath">TXT储存路径</param>
            <param name="strTXT">文本内容</param>
            <returns>成功返回0,失败返回-1</returns>
        </member>
        <member name="M:FileIO.Helper.TXT.TXTHelper.WriteFile(System.String,System.String,System.Boolean)">
            <summary>
            写入文本到TXT(选择是否覆盖)
            </summary>
            <param name="strPath">TXT储存路径</param>
            <param name="strTXT">文本内容</param>
            <param name="boolCover">(true)如果冲突覆盖文件,(false)如果冲突不进行操作</param>
            <returns>成功返回0,失败返回-1</returns>
        </member>
        <member name="M:FileIO.Helper.TXT.TXTHelper.AppendFile(System.String,System.String)">
            <summary>
            写入文本到TXT,追加写入文件(如果不存在自动创建)
            </summary>
            <param name="strPath">TXT储存路径</param>
            <param name="strTXT">文本内容</param>
            <returns>成功返回0,失败返回-1</returns>
        </member>
        <member name="M:FileIO.Helper.TXT.TXTHelper.AppendFile(System.String,System.String,System.Boolean)">
            <summary>
            写入文本到TXT,追加写入文件(如果不存在自动创建)(是否换行)
            </summary>
            <param name="strPath">TXT储存路径</param>
            <param name="strTXT">文本内容</param>
            <param name="boolWrap">(true)换行,(false)不换行</param>
            <returns>成功返回0,失败返回-1</returns>
        </member>
        <member name="M:FileIO.Helper.TXT.TXTHelper.Logs(System.String)">
            <summary>
            ADO.Helper帮助类日志文件
            </summary>
            <param name="strLogs">异常信息</param>
            <returns>成功返回0,失败返回-1</returns>
        </member>
        <member name="M:FileIO.Helper.TXT.TXTHelper.GetFileString(System.String)">
            <summary>
            读取TXT文件中的文本
            </summary>
            <param name="strPath">TXT文件路径</param>
            <returns>TXT文件中的文本</returns>
        </member>
        <member name="M:FileIO.Helper.TXT.TXTHelper.GetFileArray(System.String)">
            <summary>
            读取TXT文件中的文本(按照每行存到string[]中)
            </summary>
            <param name="strPath">TXT文件路径</param>
            <returns>TXT文件中的文本(string[])</returns>
        </member>
        <member name="M:FileIO.Helper.TXT.TXTHelper.GetFileList(System.String)">
            <summary>
            读取TXT文件中的文本(按照每行存到listString中)
            </summary>
            <param name="strPath">TXT文件路径</param>
            <returns>TXT文件中的文本(listString)</returns>
        </member>
        <member name="T:FileIO.Helper.XML.XMLHelper">
            <summary>
            XML文本帮助类
            创建日期:2017年4月28日
            </summary>
        </member>
        <member name="M:FileIO.Helper.XML.XMLHelper.CreateXmlDocument(System.String,System.String)">
            <summary>
            创建XML文档
            </summary>
            <param name="xmlFileName">XML文件路径</param>
            <param name="rootNodeName">根节点名称(须指定一个根节点名称)</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:FileIO.Helper.XML.XMLHelper.AddXmlNode(System.String,System.String,System.String)">
            <summary>
            在指定节点后添加节点
            </summary>
            <param name="xmlFileName">XML文件路径</param>
            <param name="strNodeNamePath">指定节点名称路径("NodeNamePath"指定根节点,"//NodeNamePath"指定搜索到的第一个匹配节点)</param>
            <param name="strNodeName">添加节点名称</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:FileIO.Helper.XML.XMLHelper.RemoveXmlNode(System.String,System.String)">
            <summary>
            移除指定节点的所有指定属性和子类。删除默认属性。
            </summary>
            <param name="xmlFileName">XML文件路径</param>
            <param name="strNodeNamePath">指定节点名称路径("NodeNamePath"指定根节点,"//NodeNamePath"指定搜索到的第一个匹配节点)</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:FileIO.Helper.XML.XMLHelper.WriteAttribute(System.String,System.String,System.String,System.String)">
            <summary>
            在指定节点上添加属性
            </summary>
            <param name="xmlFileName">XML文件路径</param>
            <param name="strNodeNamePath">指定节点名称路径("NodeNamePath"指定根节点,"//NodeNamePath"指定搜索到的第一个匹配节点)</param>
            <param name="strAttribute">添加属性名称</param>
            <param name="strAttributeText">添加属性文本值</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:FileIO.Helper.XML.XMLHelper.WriteInnerText(System.String,System.String,System.String)">
            <summary>
            在指定节点上添加文本
            </summary>
            <param name="xmlFileName">XML文件路径</param>
            <param name="strNodeNamePath">指定节点名称路径("NodeNamePath"指定根节点,"//NodeNamePath"指定搜索到的第一个匹配节点)</param>
            <param name="strInnerText">添加文本</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:FileIO.Helper.XML.XMLHelper.GetAttributeText(System.String,System.String,System.String)">
            <summary>
            获得指定节点的指定属性值
            </summary>
            <param name="xmlFileName">XML文件路径</param>
            <param name="strNodeNamePath">指定节点名称路径("NodeNamePath"指定根节点,"//NodeNamePath"指定搜索到的第一个匹配节点)</param>
            <param name="strAttribute">指定属性</param>
            <returns>指定节点的指定属性值</returns>
        </member>
        <member name="M:FileIO.Helper.XML.XMLHelper.GetInnerText(System.String,System.String)">
            <summary>
            获得指定节点的文本值
            </summary>
            <param name="xmlFileName">XML文件路径</param>
            <param name="strNodeNamePath">指定节点名称路径("NodeNamePath"指定根节点,"//NodeNamePath"指定搜索到的第一个匹配节点)</param>
            <returns>指定节点的文本值</returns>
        </member>
        <member name="M:FileIO.Helper.XML.XMLHelper.DataTableConversionXML(System.String,System.Data.DataTable)">
            <summary>
            DataTable转换为XML
            </summary>
            <param name="strSource">XML文件路径</param>
            <param name="dtSourceData">DataTable数据</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:FileIO.Helper.XML.XMLHelper.DataTableConversionXML(System.String,System.Data.DataTable,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            DataTable转换为XML(同步保存字段类型)
            </summary>
            <param name="strSource">XML文件路径</param>
            <param name="dtSourceData">DataTable数据</param>
            <param name="dicFieldNameType">数据库表字段名和字段类型</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:FileIO.Helper.XML.XMLHelper.DataSetConversionXML(System.String,System.Data.DataSet)">
            <summary>
            DataSet转换为XML
            </summary>
            <param name="strSource">XML文件路径</param>
            <param name="dsSourceData">DataSet数据</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:FileIO.Helper.XML.XMLHelper.DataSetConversionXML(System.String,System.Data.DataSet,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.String}})">
            <summary>
            DataSet转换为XML(同步保存字段类型)
            </summary>
            <param name="strSource">XML文件路径</param>
            <param name="dsSourceData">DataSet数据</param>
            <param name="diclistFieldNameType">数据库表字段名和字段类型</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:FileIO.Helper.XML.XMLHelper.XMLConversionDataTable(System.String)">
            <summary>
            XML转换为DataTable
            </summary>
            <param name="strSource">XML文件路径</param>
            <returns>成功返回XML的DataTable,失败返回NULL</returns>
        </member>
        <member name="M:FileIO.Helper.XML.XMLHelper.XMLConversionDataTable(System.String,System.Collections.Generic.Dictionary{System.String,System.String}@)">
            <summary>
            XML转换为DataTable(返回字段类型)
            </summary>
            <param name="strSource">XML文件路径</param>
            <param name="dicFieldNameType">返回数据库表字段名和字段类型</param>
            <returns>成功返回XML的DataTable,失败返回NULL</returns>
        </member>
        <member name="M:FileIO.Helper.XML.XMLHelper.XMLConversionDataSet(System.String)">
            <summary>
            XML转换为DataSet
            </summary>
            <param name="strSource">XML文件路径</param>
            <returns>成功返回XML的DataTable,失败返回NULL</returns>
        </member>
        <member name="M:FileIO.Helper.XML.XMLHelper.XMLConversionDataSet(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.String}}@)">
            <summary>
            XML转换为DataSet(返回字段类型)
            </summary>
            <param name="strSource">XML文件路径</param>
            <param name="diclistFieldNameType">返回数据库表字段名和字段类型</param>
            <returns>成功返回XML的DataTable,失败返回NULL</returns>
        </member>
        <member name="T:FileIO.Helper.ZIP.ZIPHelper">
            <summary>
            ZIP压缩文件帮助类
            创建日期:2017年5月25日
            </summary>
        </member>
        <member name="M:FileIO.Helper.ZIP.ZIPHelper.CompressionZip(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            压缩ZIP文件
            </summary>
            <param name="strZipPath">ZIP压缩文件保存位置</param>
            <param name="listFolderOrFilePath">需要压缩的文件夹或文件</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:FileIO.Helper.ZIP.ZIPHelper.CompressionZip(System.String,System.Collections.Generic.List{System.String},System.String)">
            <summary>
            压缩ZIP文件(加密)
            </summary>
            <param name="strZipPath">ZIP压缩文件保存位置</param>
            <param name="listFolderOrFilePath">需要压缩的文件夹或文件</param>
            <param name="strPassword">压缩文件密码</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:FileIO.Helper.ZIP.ZIPHelper.CompressionZipDirectory(System.String,ICSharpCode.SharpZipLib.Zip.ZipOutputStream,System.String)">
            <summary>
            压缩ZIP文件夹
            </summary>
            <param name="strRootPath">根目录路径</param>
            <param name="ComStream">ZIP文件输出流</param>
            <param name="strSubPath">子目录路径</param>
        </member>
        <member name="M:FileIO.Helper.ZIP.ZIPHelper.DeCompressionZip(System.String,System.String)">
            <summary>
            解压缩ZIP文件
            </summary>
            <param name="strZipPath">ZIP压缩文件保存位置</param>
            <param name="strDeCompressionPath">需要解压到的指定位置</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:FileIO.Helper.ZIP.ZIPHelper.DeCompressionZip(System.String,System.String,System.String)">
            <summary>
            解压缩ZIP文件(加密)
            </summary>
            <param name="strZipPath">ZIP压缩文件保存位置</param>
            <param name="strDeCompressionPath">需要解压到的指定位置</param>
            <param name="strPassword">压缩文件密码</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
    </members>
</doc>
