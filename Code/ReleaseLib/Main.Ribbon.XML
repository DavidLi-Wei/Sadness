<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Main.Ribbon</name>
    </assembly>
    <members>
        <member name="T:Main.Ribbon.App">
            <summary>
            App.xaml 的交互逻辑
            </summary>
            <summary>
            App
            </summary>
        </member>
        <member name="M:Main.Ribbon.App.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:Main.Ribbon.App.Main">
            <summary>
            Application Entry Point.
            </summary>
        </member>
        <member name="T:Main.Ribbon.Utils.OperationImage">
            <summary>
            操作图片方法
            </summary>
        </member>
        <member name="M:Main.Ribbon.Utils.OperationImage.ByteArrayToBitMapImage(System.Byte[])">
            <summary>
            转化图片二进制流到BitmapImage
            </summary>
            <param name="byteArray">图片二进制流</param>
            <returns>成功返回BitmapImage,失败返回null</returns>
        </member>
        <member name="M:Main.Ribbon.Utils.OperationImage.ByteArrayToImageSource(System.Byte[])">
            <summary>
            转化图片二进制流到ImageSource
            </summary>
            <param name="byteArray">图片二进制流</param>
            <returns>成功返回ImageSource,失败返回null</returns>
        </member>
        <member name="M:Main.Ribbon.Utils.OperationImage.ByteArrayToBitmap(System.Byte[])">
            <summary>
            转化图片二进制流到Bitmap
            </summary>
            <param name="byteArray">图片二进制流</param>
            <returns>成功返回Bitmap,失败返回null</returns>
        </member>
        <member name="T:Main.Ribbon.Utils.OperationReflect">
            <summary>
            操作反射方法
            </summary>
        </member>
        <member name="M:Main.Ribbon.Utils.OperationReflect.RunPluginMenuClick(System.String,System.String)">
            <summary>
            运行菜单插件Click事件
            </summary>
            <param name="strDllPath">Dll路径</param>
            <param name="strClassName">全类名</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:Main.Ribbon.Utils.OperationReflect.RunPluginToolBarClick(System.String,System.String)">
            <summary>
            运行工具栏插件Click事件
            </summary>
            <param name="strDllPath">Dll路径</param>
            <param name="strClassName">全类名</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="T:Main.Ribbon.ViewModels.MainLoginViewModel">
            <summary>
            MainLogin.xaml 的视图模型
            </summary>
        </member>
        <member name="M:Main.Ribbon.ViewModels.MainLoginViewModel.#ctor">
            <summary>
            MainLogin.xaml 的视图模型
            </summary>
        </member>
        <member name="M:Main.Ribbon.ViewModels.MainLoginViewModel.Window_Loaded(System.Windows.Window)">
            <summary>
            MainLogin窗体Load事件
            </summary>
            <param name="window">主窗体</param>
        </member>
        <member name="F:Main.Ribbon.ViewModels.MainLoginViewModel._window">
            <summary>
            Window窗体
            </summary>
        </member>
        <member name="F:Main.Ribbon.ViewModels.MainLoginViewModel._mainTitle">
            <summary>
            应用程序标题
            </summary>
        </member>
        <member name="F:Main.Ribbon.ViewModels.MainLoginViewModel._mainAppIcon">
            <summary>
            应用程序图标
            </summary>
        </member>
        <member name="F:Main.Ribbon.ViewModels.MainLoginViewModel._imgStartPicture">
            <summary>
            软件启动图片
            </summary>
        </member>
        <member name="M:Main.Ribbon.ViewModels.MainLoginViewModel.StartMainRibbon">
            <summary>
            启动MainRibbon
            </summary>
        </member>
        <member name="M:Main.Ribbon.ViewModels.MainLoginViewModel.CloseEvent">
            <summary>
            关闭事件
            </summary>
        </member>
        <member name="F:Main.Ribbon.ViewModels.MainLoginViewModel._loadedCommand">
            <summary>
            Load命令
            </summary>
        </member>
        <member name="P:Main.Ribbon.ViewModels.MainLoginViewModel.window">
            <summary>
            Window窗体
            </summary>
        </member>
        <member name="P:Main.Ribbon.ViewModels.MainLoginViewModel.MainTitle">
            <summary>
            应用程序标题
            </summary>
        </member>
        <member name="P:Main.Ribbon.ViewModels.MainLoginViewModel.MainAppIcon">
            <summary>
            应用程序图标
            </summary>
        </member>
        <member name="P:Main.Ribbon.ViewModels.MainLoginViewModel.ImgStartPicture">
            <summary>
            软件启动图片
            </summary>
        </member>
        <member name="P:Main.Ribbon.ViewModels.MainLoginViewModel.LoadedCommand">
            <summary>
            Load命令
            </summary>
        </member>
        <member name="T:Main.Ribbon.ViewModels.MainRibbonViewModel">
            <summary>
            MainRibbon.xaml 的视图模型
            </summary>
        </member>
        <member name="M:Main.Ribbon.ViewModels.MainRibbonViewModel.#ctor">
            <summary>
            MainRibbon.xaml 的视图模型
            </summary>
        </member>
        <member name="M:Main.Ribbon.ViewModels.MainRibbonViewModel.Window_Loaded(System.Windows.Window)">
            <summary>
            MainRibbon窗体Load事件
            </summary>
            <param name="window">主窗体</param>
        </member>
        <member name="F:Main.Ribbon.ViewModels.MainRibbonViewModel._window">
            <summary>
            Window窗体
            </summary>
        </member>
        <member name="F:Main.Ribbon.ViewModels.MainRibbonViewModel._mainTitle">
            <summary>
            应用程序标题
            </summary>
        </member>
        <member name="F:Main.Ribbon.ViewModels.MainRibbonViewModel._mainRibbonStyle">
            <summary>
            主界面Ribbon风格
            </summary>
        </member>
        <member name="F:Main.Ribbon.ViewModels.MainRibbonViewModel._mainAppSmallIcon">
            <summary>
            应用程序小图标
            </summary>
        </member>
        <member name="F:Main.Ribbon.ViewModels.MainRibbonViewModel._mainAppLargeIcon">
            <summary>
            应用程序大图标
            </summary>
        </member>
        <member name="F:Main.Ribbon.ViewModels.MainRibbonViewModel._mainApplicationButtonText">
            <summary>
            应用按钮文字
            </summary>
        </member>
        <member name="F:Main.Ribbon.ViewModels.MainRibbonViewModel._mainRibbonPageCategoryAlignment">
            <summary>
            类别对齐
            </summary>
        </member>
        <member name="F:Main.Ribbon.ViewModels.MainRibbonViewModel._loadedCommand">
            <summary>
            Load命令
            </summary>
        </member>
        <member name="P:Main.Ribbon.ViewModels.MainRibbonViewModel.window">
            <summary>
            Window窗体
            </summary>
        </member>
        <member name="P:Main.Ribbon.ViewModels.MainRibbonViewModel.MainTitle">
            <summary>
            应用程序标题
            </summary>
        </member>
        <member name="P:Main.Ribbon.ViewModels.MainRibbonViewModel.MainRibbonStyle">
            <summary>
            主界面Ribbon风格
            </summary>
        </member>
        <member name="P:Main.Ribbon.ViewModels.MainRibbonViewModel.MainAppSmallIcon">
            <summary>
            应用程序小图标
            </summary>
        </member>
        <member name="P:Main.Ribbon.ViewModels.MainRibbonViewModel.MainAppLargeIcon">
            <summary>
            应用程序大图标
            </summary>
        </member>
        <member name="P:Main.Ribbon.ViewModels.MainRibbonViewModel.MainApplicationButtonText">
            <summary>
            应用按钮文字
            </summary>
        </member>
        <member name="P:Main.Ribbon.ViewModels.MainRibbonViewModel.MainRibbonPageCategoryAlignment">
            <summary>
            类别对齐
            </summary>
        </member>
        <member name="P:Main.Ribbon.ViewModels.MainRibbonViewModel.LoadedCommand">
            <summary>
            Load命令
            </summary>
        </member>
        <member name="T:Main.Ribbon.Views.MainLogin">
            <summary>
            MainLogin.xaml 的交互逻辑
            </summary>
            <summary>
            MainLogin
            </summary>
        </member>
        <member name="M:Main.Ribbon.Views.MainLogin.#ctor">
            <summary>
            MainLogin.xaml 的构造函数
            </summary>
        </member>
        <member name="M:Main.Ribbon.Views.MainLogin.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Main.Ribbon.Views.MainRibbon">
            <summary>
            MainRibbon.xaml 的交互逻辑
            </summary>
            <summary>
            MainRibbon
            </summary>
        </member>
        <member name="M:Main.Ribbon.Views.MainRibbon.#ctor">
            <summary>
            MainRibbon.xaml 的构造函数
            </summary>
        </member>
        <member name="M:Main.Ribbon.Views.MainRibbon.CloseEventDelegate">
            <summary>
            关闭登录窗口路由通知
            </summary>
        </member>
        <member name="M:Main.Ribbon.Views.MainRibbon.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="E:Main.Ribbon.Views.MainRibbon.CloseEvent">
            <summary>
            关闭事件
            </summary>
        </member>
        <member name="T:Main.Ribbon.Views.MainRibbon.CloseDelegate">
            <summary>
            关闭委托
            </summary>
        </member>
        <member name="T:Main.Ribbon.Properties.Resources">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:Main.Ribbon.Properties.Resources.ResourceManager">
            <summary>
              返回此类使用的、缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:Main.Ribbon.Properties.Resources.Culture">
            <summary>
              为所有资源查找重写当前线程的 CurrentUICulture 属性，
              方法是使用此强类型资源类。
            </summary>
        </member>
    </members>
</doc>
