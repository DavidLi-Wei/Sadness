<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sadness.Utils.Helper</name>
    </assembly>
    <members>
        <member name="T:Utils.Helper.CheckCorrectness.CheckCorrectnessHelper">
            <summary>
            效验正确性帮助类
            创建日期:2017年6月18日
            </summary>
        </member>
        <member name="M:Utils.Helper.CheckCorrectness.CheckCorrectnessHelper.CheckPhoneNumber(System.String)">
            <summary>
            效验中国大陆手机号码
            </summary>
            <param name="strPhoneNumber">中国大陆手机号码</param>
            <returns>效验通过返回true,失败返回false</returns>
        </member>
        <member name="M:Utils.Helper.CheckCorrectness.CheckCorrectnessHelper.CheckEMail(System.String)">
            <summary>
            效验E-Mail
            </summary>
            <param name="strEMail">E-Mail</param>
            <returns>效验通过返回true,失败返回false</returns>
        </member>
        <member name="M:Utils.Helper.CheckCorrectness.CheckCorrectnessHelper.CheckIDNumber(System.String)">
            <summary>
            效验身份证号码
            </summary>
            <param name="strIDNumber">身份证号码</param>
            <returns>效验通过返回true,失败返回false</returns>
        </member>
        <member name="M:Utils.Helper.CheckCorrectness.CheckCorrectnessHelper.CheckIDCard15(System.String)">
            <summary>
            15位身份证号验证
            </summary>
            <param name="idNumber">身份证号</param>
            <returns>效验通过返回true,失败返回false</returns>
        </member>
        <member name="M:Utils.Helper.CheckCorrectness.CheckCorrectnessHelper.CheckIDCard18(System.String)">
            <summary>  
            18位身份证号码验证  
            </summary>  
            <param name="idNumber">身份证号</param>  
            <returns>效验通过返回true,失败返回false</returns>  
        </member>
        <member name="M:Utils.Helper.CheckCorrectness.CheckCorrectnessHelper.CheckInternetProtocol(System.String)">
            <summary>
            效验IP地址
            </summary>
            <param name="strInternetProtocol">IP地址</param>
            <returns>效验通过返回true,失败返回false</returns>
        </member>
        <member name="T:Utils.Helper.ClosedForm.ClosedFormHelper">
            <summary>
            关闭窗体帮助类
            创建日期:2017年6月6日
            </summary>
        </member>
        <member name="M:Utils.Helper.ClosedForm.ClosedFormHelper.ByHandleIsClosedForm(System.String,System.String)">
            <summary>
            通过句柄关闭窗体
            </summary>
            <param name="lpClassName">指向包含了窗口类名的空中止(C语言)字串的指针;或设为零,表示接收任何类</param>
            <param name="lpWindowName">指向包含了窗口文本(或标签)的空中止(C语言)字串的指针;或设为零,表示接收任何窗口标题</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:Utils.Helper.ClosedForm.ClosedFormHelper.FindWindow(System.String,System.String)">
            <summary>
            获得指定窗口类名或窗口名的窗口的句柄
            </summary>
            <param name="lpClassName">指向包含了窗口类名的空中止(C语言)字串的指针;或设为零,表示接收任何类</param>
            <param name="lpWindowName">指向包含了窗口文本(或标签)的空中止(C语言)字串的指针;或设为零,表示接收任何窗口标题</param>
            <returns>执行成功,则返回值是拥有指定窗口类名或窗口名的窗口的句柄;执行失败,则返回值为NULL</returns>
        </member>
        <member name="M:Utils.Helper.ClosedForm.ClosedFormHelper.SendMessage(System.IntPtr,System.Int32,System.Int32,System.Int32)">
            <summary>
            该函数将指定的消息发送到一个或多个窗口.此函数为指定的窗口调用窗口程序,直到窗口程序处理完消息再返回.而和函数PostMessage不同,PostMessage是将一个消息寄送到一个线程的消息队列后就立即返回.
            </summary>
            <param name="hWnd">其窗口程序将接收消息的窗口的句柄.如果此参数为HWND_BROADCAST,则消息将被发送到系统中所有顶层窗口,包括无效或不可见的非自身拥有的窗口、被覆盖的窗口和弹出式窗口,但消息不被发送到子窗口</param>
            <param name="Msg">指定被发送的消息</param>
            <param name="wParam">指定附加的消息特定信息</param>
            <param name="lParam">指定附加的消息特定信息</param>
            <returns>返回值指定消息处理的结果，依赖于所发送的消息</returns>
        </member>
        <member name="T:Utils.Helper.Cookie.CookieHelper">
            <summary>
            浏览器缓存帮助类
            创建日期:2017年7月31日
            </summary>
        </member>
        <member name="M:Utils.Helper.Cookie.CookieHelper.SetCookie(System.String,System.String,System.DateTime)">
            <summary>
            添加Cookie
            </summary>
            <param name="strCookieName">Cookie名</param>
            <param name="strCookieValue">Cookie值</param>
            <param name="dtExpires">到期时间(如果为空默认为7天)</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:Utils.Helper.Cookie.CookieHelper.SetCookie(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.DateTime)">
            <summary>
            添加带有子键的Cookie
            </summary>
            <param name="strCookieName">Cookie名</param>
            <param name="dicCookieValue">Cookie子键值</param>
            <param name="dtExpires">到期时间(如果为空默认为7天)</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:Utils.Helper.Cookie.CookieHelper.GetCookie(System.String)">
            <summary>
            获取Cookie
            </summary>
            <param name="strCookieName">Cookie名</param>
            <returns>指定Cookie的Value值</returns>
        </member>
        <member name="M:Utils.Helper.Cookie.CookieHelper.GetCookie(System.String,System.String)">
            <summary>
            获取子键Cookie
            </summary>
            <param name="strCookieName">Cookie名</param>
            <param name="strCookieSubkey">Cookie子键名</param>
            <returns>指定Cookie子键的Value值</returns>
        </member>
        <member name="M:Utils.Helper.Cookie.CookieHelper.ModifyCookie(System.String,System.String)">
            <summary>
            修改指定Cookie
            </summary>
            <param name="strCookieName">Cookie名</param>
            <param name="strCookieValue">Cookie值</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:Utils.Helper.Cookie.CookieHelper.ModifyCookie(System.String,System.String,System.String)">
            <summary>
            修改指定子键Cookie
            </summary>
            <param name="strCookieName">Cookie名</param>
            <param name="strCookieSubkey">Cookie子键名</param>
            <param name="strCookieValue">Cookie子键值</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:Utils.Helper.Cookie.CookieHelper.RemoveAllCookie">
            <summary>
            移除所有Cookie
            </summary>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:Utils.Helper.Cookie.CookieHelper.RemoveCookie(System.String)">
            <summary>
            移除指定Cookie(测试无效)
            </summary>
            <param name="strCookieName">Cookie名</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="T:Utils.Helper.EMail.EMailHelper">
            <summary>
            E-Mail邮件帮助类
            创建日期:2017年6月18日
            </summary>
        </member>
        <member name="M:Utils.Helper.EMail.EMailHelper.SendMail_163SMTP(System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.String,System.String)">
            <summary>
            发送邮件(163SMTP)(未测试)
            </summary>
            <param name="strSender">发件人邮箱(163)</param>
            <param name="strSenderPassword">发件人密码(163)</param>
            <param name="listAddressee">收件人</param>
            <param name="listCC">抄送</param>
            <param name="strSubject">邮件标题</param>
            <param name="strBody">邮件内容</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:Utils.Helper.EMail.EMailHelper.SendMail_QQSMTP(System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.String,System.String)">
            <summary>
            发送邮件(QQSMTP)(未测试)
            </summary>
            <param name="strSender">发件人邮箱(QQ)</param>
            <param name="strAuthorizationCode">发件人密码(QQ)</param>
            <param name="listAddressee">收件人</param>
            <param name="listCC">抄送</param>
            <param name="strSubject">邮件标题</param>
            <param name="strBody">邮件内容</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="T:Utils.Helper.Encryption.AESHelper">
            <summary>
            AES加密解密帮助类
            创建日期:2018年1月10日
            </summary>
        </member>
        <member name="M:Utils.Helper.Encryption.AESHelper.AESEncrypt(System.String,System.String)">
            <summary>
            AES加密
            </summary>
            <param name="strPlaintext">明文</param>
            <param name="strKey">秘钥</param>
            <returns>AES密文</returns>
        </member>
        <member name="M:Utils.Helper.Encryption.AESHelper.AESDecrypt(System.String,System.String)">
            <summary>
            AES解密
            </summary>
            <param name="strCiphertext">AES密文</param>
            <param name="strKey">秘钥</param>
            <returns>明文</returns>
        </member>
        <member name="M:Utils.Helper.Encryption.AESHelper.FileAESEncrypt(System.String,System.String,System.String)">
            <summary>
            文件AES加密
            </summary>
            <param name="strFilePath">文件路径</param>
            <param name="strSaveFilePath">加密文件目录</param>
            <param name="strKey">秘钥</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:Utils.Helper.Encryption.AESHelper.FileAESDecrypt(System.String,System.String,System.String)">
            <summary>
            文件AES解密
            </summary>
            <param name="strFilePath">被加密的文件路径</param>
            <param name="strSaveFilePath">解密文件目录</param>
            <param name="strKey">秘钥</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="T:Utils.Helper.Encryption.Base64Helper">
            <summary>
            Base64加密帮助类
            创建日期:2018年3月30日
            </summary>
        </member>
        <member name="M:Utils.Helper.Encryption.Base64Helper.Base64Encrypt(System.String)">
            <summary>
            Base64加密
            </summary>
            <param name="strPlaintext">明文</param>
            <returns>Base64密文</returns>
        </member>
        <member name="M:Utils.Helper.Encryption.Base64Helper.Base64Decrypt(System.String)">
            <summary>
            Base64解密
            </summary>
            <param name="strCiphertext">Base64密文</param>
            <returns>明文</returns>
        </member>
        <member name="M:Utils.Helper.Encryption.Base64Helper.ImageBase64Encrypt(System.String,System.Drawing.Imaging.ImageFormat)">
            <summary>
            图片Base64加密
            </summary>
            <param name="strImagePath">图片路径</param>
            <param name="imageFormat">指定图像格式</param>
            <returns>Base64密文</returns>
        </member>
        <member name="M:Utils.Helper.Encryption.Base64Helper.ImageBase64Decrypt(System.String,System.String,System.Drawing.Imaging.ImageFormat)">
            <summary>
            图片Base64解密
            </summary>
            <param name="strCiphertext">Base64密文</param>
            <param name="strSaveFilePath">解密图片目录</param>
            <param name="imageFormat">指定图像格式</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="T:Utils.Helper.Encryption.CRC32Helper">
            <summary>
            循环沉余效验帮助类
            创建日期:2017年6月16日
            </summary>
        </member>
        <member name="M:Utils.Helper.Encryption.CRC32Helper.CRC32Encrypt_8Lower(System.String)">
            <summary>
            CRC32加密(8位小写)
            </summary>
            <param name="strPlaintext">明文</param>
            <returns>CRC32密文(8位小写)</returns>
        </member>
        <member name="M:Utils.Helper.Encryption.CRC32Helper.CRC32Encrypt_8Upper(System.String)">
            <summary>
            CRC32加密(8位大写)
            </summary>
            <param name="strPlaintext">明文</param>
            <returns>CRC32密文(8位大写)</returns>
        </member>
        <member name="M:Utils.Helper.Encryption.CRC32Helper.FileCRC32Encrypt_8Lower(System.String)">
            <summary>
            获取文件CRC32值(8位小写)
            </summary>
            <param name="strFilePath">文件路径</param>
            <returns>文件CRC32值(8位小写)</returns>
        </member>
        <member name="M:Utils.Helper.Encryption.CRC32Helper.FileCRC32Encrypt_8Upper(System.String)">
            <summary>
            获取文件CRC32值(8位大写)
            </summary>
            <param name="strFilePath">文件路径</param>
            <returns>文件CRC32值(8位大写)</returns>
        </member>
        <member name="T:Utils.Helper.Encryption.Crc32">
            <summary>
            提供 CRC32 算法的实现
            </summary>
        </member>
        <member name="F:Utils.Helper.Encryption.Crc32.DefaultPolynomial">
            <summary>
            Default Polynomial
            </summary>
        </member>
        <member name="F:Utils.Helper.Encryption.Crc32.DefaultSeed">
            <summary>
            Default Seed
            </summary>
        </member>
        <member name="M:Utils.Helper.Encryption.Crc32.#ctor">
            <summary>
            Crc32
            </summary>
        </member>
        <member name="M:Utils.Helper.Encryption.Crc32.#ctor(System.UInt32,System.UInt32)">
            <summary>
            Crc32
            </summary>
            <param name="polynomial"></param>
            <param name="seed"></param>
        </member>
        <member name="M:Utils.Helper.Encryption.Crc32.Initialize">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:Utils.Helper.Encryption.Crc32.HashCore(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Hash Core
            </summary>
            <param name="buffer"></param>
            <param name="start"></param>
            <param name="length"></param>
        </member>
        <member name="M:Utils.Helper.Encryption.Crc32.HashFinal">
            <summary>
            Hash Final
            </summary>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Encryption.Crc32.Compute(System.Byte[])">
            <summary>
            Compute
            </summary>
            <param name="buffer"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Encryption.Crc32.Compute(System.UInt32,System.Byte[])">
            <summary>
            Compute
            </summary>
            <param name="seed"></param>
            <param name="buffer"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Encryption.Crc32.Compute(System.UInt32,System.UInt32,System.Byte[])">
            <summary>
            Compute
            </summary>
            <param name="polynomial"></param>
            <param name="seed"></param>
            <param name="buffer"></param>
            <returns></returns>
        </member>
        <member name="T:Utils.Helper.Encryption.DESHelper">
            <summary>
            DES加密解密帮助类
            创建日期:2017年6月16日
            </summary>
        </member>
        <member name="M:Utils.Helper.Encryption.DESHelper.DESEncrypt(System.String,System.String,System.String)">
            <summary>
            DES加密
            </summary>
            <param name="strPlaintext">明文</param>
            <param name="strKey">秘钥(8位)</param>
            <param name="strIV">向量(8位)</param>
            <returns>DES密文</returns>
        </member>
        <member name="M:Utils.Helper.Encryption.DESHelper.DESDecrypt(System.String,System.String,System.String)">
            <summary>
            DES解密
            </summary>
            <param name="strCiphertext">DES密文</param>
            <param name="strKey">秘钥(8位)</param>
            <param name="strIV">向量(8位)</param>
            <returns>明文</returns>
        </member>
        <member name="M:Utils.Helper.Encryption.DESHelper.FileDESEncrypt(System.String,System.String,System.String,System.String)">
            <summary>
            文件DES加密
            </summary>
            <param name="strFilePath">文件路径</param>
            <param name="strSaveFilePath">加密文件目录</param>
            <param name="strKey">秘钥(8位)</param>
            <param name="strIV">向量(8位)</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:Utils.Helper.Encryption.DESHelper.FileDESDecrypt(System.String,System.String,System.String,System.String)">
            <summary>
            文件DES解密
            </summary>
            <param name="strFilePath">被加密的文件路径</param>
            <param name="strSaveFilePath">解密文件目录</param>
            <param name="strKey">秘钥(8位)</param>
            <param name="strIV">向量(8位)</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="T:Utils.Helper.Encryption.FolderHelper">
            <summary>
            文件夹加密解密帮助类(可破解)
            创建日期:2017年12月4日
            </summary>
        </member>
        <member name="F:Utils.Helper.Encryption.FolderHelper.Lock">
            <summary>
            加密文件
            </summary>
        </member>
        <member name="F:Utils.Helper.Encryption.FolderHelper.Control">
            <summary>
            控制面板
            </summary>
        </member>
        <member name="F:Utils.Helper.Encryption.FolderHelper.RunIE">
            <summary>
            RunIE
            </summary>
        </member>
        <member name="F:Utils.Helper.Encryption.FolderHelper.Recycle">
            <summary>
            回收站
            </summary>
        </member>
        <member name="F:Utils.Helper.Encryption.FolderHelper.Help">
            <summary>
            Help
            </summary>
        </member>
        <member name="F:Utils.Helper.Encryption.FolderHelper.NetWork">
            <summary>
            NetWork
            </summary>
        </member>
        <member name="M:Utils.Helper.Encryption.FolderHelper.FolderEncrypt(System.String,System.String)">
            <summary>
            文件夹加密(可破解)
            </summary>
            <param name="strFolderPath">文件夹路径</param>
            <param name="strClsid">Clsid类型</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:Utils.Helper.Encryption.FolderHelper.FolderDecrypt(System.String)">
            <summary>
            文件夹解密
            理论上可以解密所有该方法加密的文件夹
            </summary>
            <param name="strFolderPath">文件夹路径</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:Utils.Helper.Encryption.FolderHelper.FolderEncrypt(System.String,System.String,System.String)">
            <summary>
            文件夹加密(带密码)(可破解)
            </summary>
            <param name="strFolderPath">文件夹路径</param>
            <param name="strClsid">Clsid类型</param>
            <param name="strPassword">加密密码</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:Utils.Helper.Encryption.FolderHelper.FolderDecrypt(System.String,System.String)">
            <summary>
            文件夹解密(带密码)
            </summary>
            <param name="strFolderPath">文件夹路径</param>
            <param name="strPassword">加密密码</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="T:Utils.Helper.Encryption.MD5Helper">
            <summary>
            MD5加密帮助类
            创建日期:2017年6月16日
            </summary>
        </member>
        <member name="M:Utils.Helper.Encryption.MD5Helper.MD5Encrypt_16Lower(System.String)">
            <summary>
            MD5加密(16位小写)
            </summary>
            <param name="strPlaintext">明文</param>
            <returns>MD5密文(16位小写)</returns>
        </member>
        <member name="M:Utils.Helper.Encryption.MD5Helper.MD5Encrypt_16Upper(System.String)">
            <summary>
            MD5加密(16位大写)
            </summary>
            <param name="strPlaintext">明文</param>
            <returns>MD5密文(16位小写)</returns>
        </member>
        <member name="M:Utils.Helper.Encryption.MD5Helper.MD5Encrypt_32Lower(System.String)">
            <summary>
            MD5加密(32位小写)
            </summary>
            <param name="strPlaintext">明文</param>
            <returns>MD5密文(32位小写)</returns>
        </member>
        <member name="M:Utils.Helper.Encryption.MD5Helper.MD5Encrypt_32Upper(System.String)">
            <summary>
            MD5加密(32位大写)
            </summary>
            <param name="strPlaintext">明文</param>
            <returns>MD5密文(32位小写)</returns>
        </member>
        <member name="M:Utils.Helper.Encryption.MD5Helper.FileMD5Encrypt_32Lower(System.String)">
            <summary>
            获取文件MD5值(32位小写)
            </summary>
            <param name="strFilePath">文件路径</param>
            <returns>文件MD5值(32位小写)</returns>
        </member>
        <member name="M:Utils.Helper.Encryption.MD5Helper.FileMD5Encrypt_32Upper(System.String)">
            <summary>
            获取文件MD5值(32位大写)
            </summary>
            <param name="strFilePath">文件路径</param>
            <returns>文件MD5值(32位大写)</returns>
        </member>
        <member name="T:Utils.Helper.Encryption.RSAHelper">
            <summary>
            RSA加密解密帮助类
            创建日期:2017年6月16日
            </summary>
        </member>
        <member name="M:Utils.Helper.Encryption.RSAHelper.RSAKey(System.String@,System.String@)">
            <summary>
            RSA产生秘钥
            </summary>
            <param name="xmlPublicKey">公钥</param>
            <param name="xmlPrivateKey">私钥</param>
        </member>
        <member name="M:Utils.Helper.Encryption.RSAHelper.RSAEncrypt(System.String,System.String)">
            <summary>
            RSA加密
            </summary>
            <param name="strPlaintext">明文</param>
            <param name="xmlPublicKey">公钥</param>
            <returns>RSA密文</returns>
        </member>
        <member name="M:Utils.Helper.Encryption.RSAHelper.RSADecrypt(System.String,System.String)">
            <summary>
            RSA解密
            </summary>
            <param name="strCiphertext">RSA密文</param>
            <param name="xmlPrivateKey">私钥</param>
            <returns>明文</returns>
        </member>
        <member name="T:Utils.Helper.Encryption.SHA1Helper">
            <summary>
            SHA1加密帮助类
            创建日期:2017年6月16日
            </summary>
        </member>
        <member name="M:Utils.Helper.Encryption.SHA1Helper.SHA1Encrypt_40Lower(System.String)">
            <summary>
            SHA1加密(40位小写)
            </summary>
            <param name="strPlaintext">明文</param>
            <returns>SHA1密文(40位小写)</returns>
        </member>
        <member name="M:Utils.Helper.Encryption.SHA1Helper.SHA1Encrypt_40Upper(System.String)">
            <summary>
            SHA1加密(40位大写)
            </summary>
            <param name="strPlaintext">明文</param>
            <returns>SHA1密文(40位大写)</returns>
        </member>
        <member name="M:Utils.Helper.Encryption.SHA1Helper.FileSHA1Encrypt_40Lower(System.String)">
            <summary>
            获取文件SHA1值(40位小写)
            </summary>
            <param name="strFilePath">文件路径</param>
            <returns>文件SHA1值(40位小写)</returns>
        </member>
        <member name="M:Utils.Helper.Encryption.SHA1Helper.FileSHA1Encrypt_40Upper(System.String)">
            <summary>
            获取文件SHA1值(40位大写)
            </summary>
            <param name="strFilePath">文件路径</param>
            <returns>文件SHA1值(40位大写)</returns>
        </member>
        <member name="T:Utils.Helper.HookProc.HookProcHelper">
            <summary>
            钩子程序帮助类
            创建日期:2017年6月7日
            </summary>
        </member>
        <member name="M:Utils.Helper.HookProc.HookProcHelper.StartTestHookListeners">
            <summary>
            启动钩子测试程序
            </summary>
        </member>
        <member name="M:Utils.Helper.HookProc.HookProcHelper.StopTestHookListeners">
            <summary>
            停止钩子测试程序
            </summary>
        </member>
        <member name="M:Utils.Helper.HookProc.HookProcHelper.StartRecordOperation">
            <summary>
            启动记录电脑操作
            </summary>
        </member>
        <member name="M:Utils.Helper.HookProc.HookProcHelper.StopRecordOperation">
            <summary>
            停止记录电脑操作(测试开启后无法关闭,直到所有线程关闭)
            </summary>
        </member>
        <member name="T:Utils.Helper.HookProc.RecordOperation">
            <summary>
            记录电脑操作窗体(不显示界面)
            创建日期:2017年6月9日
            </summary>
        </member>
        <member name="M:Utils.Helper.HookProc.RecordOperation.GetKeyboardState(System.Byte[])">
            <summary>
            获取键盘状态
            </summary>
            <param name="pbKeyState">指向一个256字节的数组,数组用于接收每个虚拟键的状态.</param>
            <returns>若函数调用成功,则返回非0值.若函数调用不成功,则返回值为0.若要获得更多的错误信息,可以调用GetLastError函数</returns>
        </member>
        <member name="P:Utils.Helper.HookProc.RecordOperation.CapsLockStatus">
            <summary>
            大写锁定状态
            </summary>
        </member>
        <member name="P:Utils.Helper.HookProc.RecordOperation.strCurrentMouseX">
            <summary>
            鼠标当前X坐标
            </summary>
        </member>
        <member name="P:Utils.Helper.HookProc.RecordOperation.strCurrentMouseY">
            <summary>
            鼠标当前Y坐标
            </summary>
        </member>
        <member name="P:Utils.Helper.HookProc.RecordOperation.strMouseDownMouseX">
            <summary>
            鼠标按下时X坐标
            </summary>
        </member>
        <member name="P:Utils.Helper.HookProc.RecordOperation.strMouseDownMouseY">
            <summary>
            鼠标按下时Y坐标
            </summary>
        </member>
        <member name="M:Utils.Helper.HookProc.RecordOperation.#ctor">
            <summary>
            记录操作
            </summary>
        </member>
        <member name="M:Utils.Helper.HookProc.RecordOperation.HookManager_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            键盘按键
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Utils.Helper.HookProc.RecordOperation.HookManager_KeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            键盘按下
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Utils.Helper.HookProc.RecordOperation.HookManager_KeyUp(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            键盘弹起
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Utils.Helper.HookProc.RecordOperation.HookManager_MouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            鼠标移动
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Utils.Helper.HookProc.RecordOperation.HookManager_MouseClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            鼠标点击
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Utils.Helper.HookProc.RecordOperation.HookManager_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            鼠标按下
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Utils.Helper.HookProc.RecordOperation.HookManager_MouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            鼠标弹起
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Utils.Helper.HookProc.RecordOperation.HookManager_MouseDoubleClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            鼠标双击
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Utils.Helper.HookProc.RecordOperation.HookManager_MouseWheel(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            鼠标中间滑轮
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Utils.Helper.HookProc.RecordOperation.RecordOperationLogs(System.String)">
            <summary>
            RecordOperation日志文件
            </summary>
            <param name="strLogs">异常信息</param>
        </member>
        <member name="M:Utils.Helper.HookProc.RecordOperation.KeyboardOperationLogs(System.String)">
            <summary>
            KeyboardOperation日志文件
            </summary>
            <param name="strLogs">异常信息</param>
        </member>
        <member name="F:Utils.Helper.HookProc.RecordOperation.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Utils.Helper.HookProc.RecordOperation.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Utils.Helper.HookProc.RecordOperation.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Utils.Helper.HookProc.TestFormHookListeners">
            <summary>
            测试钩子监听器
            </summary>
        </member>
        <member name="M:Utils.Helper.HookProc.TestFormHookListeners.#ctor">
            <summary>
            测试钩子监听器
            </summary>
        </member>
        <member name="F:Utils.Helper.HookProc.TestFormHookListeners.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Utils.Helper.HookProc.TestFormHookListeners.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Utils.Helper.HookProc.TestFormHookListeners.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Utils.Helper.Image.ImageHelper">
            <summary>
            图片帮助类
            </summary>
        </member>
        <member name="M:Utils.Helper.Image.ImageHelper.ByteArrayToBitMapImage(System.Byte[])">
            <summary>
            转化图片二进制流到BitmapImage
            </summary>
            <param name="byteArray">图片二进制流</param>
            <returns>成功返回BitmapImage,失败返回null</returns>
        </member>
        <member name="M:Utils.Helper.Image.ImageHelper.ByteArrayToImageSource(System.Byte[])">
            <summary>
            转化图片二进制流到ImageSource
            </summary>
            <param name="byteArray">图片二进制流</param>
            <returns>成功返回ImageSource,失败返回null</returns>
        </member>
        <member name="M:Utils.Helper.Image.ImageHelper.ByteArrayToBitmap(System.Byte[])">
            <summary>
            转化图片二进制流到Bitmap
            </summary>
            <param name="byteArray">图片二进制流</param>
            <returns>成功返回Bitmap,失败返回null</returns>
        </member>
        <member name="T:Utils.Helper.PCInformation.EncryptionHelper">
            <summary>
            加密注册码帮助类
            创建日期:2017年6月6日
            </summary>
        </member>
        <member name="M:Utils.Helper.PCInformation.EncryptionHelper.RequestCode">
            <summary>
            注册请求码
            </summary>
            <returns>请求码</returns>
        </member>
        <member name="M:Utils.Helper.PCInformation.EncryptionHelper.ActivationCode(System.String)">
            <summary>
            注册激活码
            </summary>
            <returns>激活码</returns>
        </member>
        <member name="T:Utils.Helper.PCInformation.PCInformationHelper">
            <summary>
            获取电脑信息帮助类
            创建日期:2017年6月6日
            </summary>
        </member>
        <member name="M:Utils.Helper.PCInformation.PCInformationHelper.MAC">
            <summary>
            读取网卡MAC地址
            </summary>
            <returns>成功返回网卡MAC地址,失败返回NULL</returns>
        </member>
        <member name="M:Utils.Helper.PCInformation.PCInformationHelper.CPU">
            <summary>
            读取CPU-ID
            </summary>
            <returns>成功返回CPU-ID,失败返回NULL</returns>
        </member>
        <member name="M:Utils.Helper.PCInformation.PCInformationHelper.DESK">
            <summary>
            读取硬盘序列号
            </summary>
            <returns>成功返回硬盘序列号,失败返回NULL</returns>
        </member>
        <member name="M:Utils.Helper.PCInformation.PCInformationHelper.Memory">
            <summary>
            读取内存序列号
            </summary>
            <returns>成功返回内存序列号,失败返回NULL</returns>
        </member>
        <member name="M:Utils.Helper.PCInformation.PCInformationHelper.Motherboard">
            <summary>
            读取主板序列号
            </summary>
            <returns>成功返回主板序列号,失败返回NULL</returns>
        </member>
        <member name="M:Utils.Helper.PCInformation.PCInformationHelper.BIOS">
            <summary>
            读取BIOS序列号
            </summary>
            <returns>成功返回BIOS序列号,失败返回NULL</returns>
        </member>
        <member name="M:Utils.Helper.PCInformation.PCInformationHelper.Video">
            <summary>
            读取显卡信息
            </summary>
            <returns>成功返回显卡信息,失败返回NULL</returns>
        </member>
        <member name="T:Utils.Helper.Properties.Resources">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:Utils.Helper.Properties.Resources.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:Utils.Helper.Properties.Resources.Culture">
            <summary>
              使用此强类型资源类，为所有资源查找
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="T:Utils.Helper.QRCode.QRCodeHelper">
            <summary>
            二维码帮助类
            创建日期:2017年6月6日
            </summary>
        </member>
        <member name="M:Utils.Helper.QRCode.QRCodeHelper.DeleteObject(System.IntPtr)">
            <summary>
            注销对象方法API
            </summary>
        </member>
        <member name="M:Utils.Helper.QRCode.QRCodeHelper.GetQRCode(System.String,System.Int32,System.Int32)">
            <summary>
            生成二维码
            </summary>
            <param name="strContent">二维码文本</param>
            <param name="iWidth">二维码宽度</param>
            <param name="iHeigth">二维码高度</param>
            <returns>二维码位图</returns>
        </member>
        <member name="M:Utils.Helper.QRCode.QRCodeHelper.GetQRCode_logo(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            生成二维码(带LOGO)
            </summary>
            <param name="strContent">二维码文本</param>
            <param name="iWidth">二维码宽度</param>
            <param name="iHeigth">二维码高度</param>
            <param name="strLogoPath">LOGO图片路径</param>
            <returns>二维码位图</returns>
        </member>
        <member name="M:Utils.Helper.QRCode.QRCodeHelper.GetImageSourceFromBitmap(System.Drawing.Bitmap)">
            <summary>
            从位图获取图像源
            </summary>
            <param name="bitmapQRCode">位图二维码</param>
            <returns>图像源(用以显示在控件上)</returns>
        </member>
        <member name="M:Utils.Helper.QRCode.QRCodeHelper.BarcodeReader(System.Drawing.Bitmap)">
            <summary>
            识别二维码和条形码
            </summary>
            <param name="bitmapQRCode">二维码和条形码位图</param>
            <returns>成功返回二维码和条形码内容,失败返回NULL或Empty</returns>
        </member>
        <member name="M:Utils.Helper.QRCode.QRCodeHelper.BarcodeReader(System.String)">
            <summary>
            识别二维码和条形码
            </summary>
            <param name="strQRCodePath">二维码和条形码文件路径</param>
            <returns>成功返回二维码和条形码内容,失败返回NULL或Empty</returns>
        </member>
        <member name="M:Utils.Helper.QRCode.QRCodeHelper.SaveBitmap(System.String,System.Drawing.Bitmap)">
            <summary>
            保存二维码和条形码位图到指定位置
            </summary>
            <param name="strSavePath">文件保存位置</param>
            <param name="bitmapQRCode">二维码和条形码位图</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="T:Utils.Helper.Redis.RedisHelper">
            <summary>
            Redis帮助类
            https://github.com/liqingwen2015/Wen.Helpers/blob/master/Wen.Common/Redis
            创建日期:2018年7月7日
            </summary>
        </member>
        <member name="T:Utils.Helper.Redis.RedisHelper.OrderType">
            <summary>
            Redis 排序类型
            </summary>
        </member>
        <member name="F:Utils.Helper.Redis.RedisHelper.OrderType.Ascending">
            <summary>
            提升
            </summary>
        </member>
        <member name="F:Utils.Helper.Redis.RedisHelper.OrderType.Descending">
            <summary>
            下降
            </summary>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.GetConnectionRedisMultiplexer">
            <summary>
            获取 Redis 连接对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.GetTransaction">
            <summary>
            获取事务
            </summary>
            <returns></returns>
        </member>
        <member name="F:Utils.Helper.Redis.RedisHelper.ConnectionString">
            <summary>
            连接字符串
            </summary>
        </member>
        <member name="F:Utils.Helper.Redis.RedisHelper._connMultiplexer">
            <summary>
            redis 连接对象
            </summary>
        </member>
        <member name="F:Utils.Helper.Redis.RedisHelper.DefaultKey">
            <summary>
            默认的 Key 值（用来当作 RedisKey 的前缀）
            </summary>
        </member>
        <member name="F:Utils.Helper.Redis.RedisHelper.Locker">
            <summary>
            锁
            </summary>
        </member>
        <member name="F:Utils.Helper.Redis.RedisHelper._db">
            <summary>
            数据库
            </summary>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.#cctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.#ctor(System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="db"></param>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.StringSet(System.String,System.String,System.Nullable{System.TimeSpan})">
            <summary>
            设置 key 并保存字符串（如果 key 已存在，则覆盖值）
            </summary>
            <param name="redisKey"></param>
            <param name="redisValue"></param>
            <param name="expiry"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.StringSet(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            保存多个 Key-value
            </summary>
            <param name="keyValuePairs"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.StringGet(System.String,System.Nullable{System.TimeSpan})">
            <summary>
            获取字符串
            </summary>
            <param name="redisKey"></param>
            <param name="expiry"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.StringSet``1(System.String,``0,System.Nullable{System.TimeSpan})">
            <summary>
            存储一个对象（该对象会被序列化保存）
            </summary>
            <param name="redisKey"></param>
            <param name="redisValue"></param>
            <param name="expiry"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.StringGet``1(System.String,System.Nullable{System.TimeSpan})">
            <summary>
            获取一个对象（会进行反序列化）
            </summary>
            <param name="redisKey"></param>
            <param name="expiry"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.StringSetAsync(System.String,System.String,System.Nullable{System.TimeSpan})">
            <summary>
            保存一个字符串值
            </summary>
            <param name="redisKey"></param>
            <param name="redisValue"></param>
            <param name="expiry"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.StringSetAsync(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            保存一组字符串值
            </summary>
            <param name="keyValuePairs"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.StringGetAsync(System.String,System.String,System.Nullable{System.TimeSpan})">
            <summary>
            获取单个值
            </summary>
            <param name="redisKey"></param>
            <param name="redisValue"></param>
            <param name="expiry"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.StringSetAsync``1(System.String,``0,System.Nullable{System.TimeSpan})">
            <summary>
            存储一个对象（该对象会被序列化保存）
            </summary>
            <param name="redisKey"></param>
            <param name="redisValue"></param>
            <param name="expiry"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.StringGetAsync``1(System.String,System.Nullable{System.TimeSpan})">
            <summary>
            获取一个对象（会进行反序列化）
            </summary>
            <param name="redisKey"></param>
            <param name="expiry"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.HashExists(System.String,System.String)">
            <summary>
            判断该字段是否存在 hash 中
            </summary>
            <param name="redisKey"></param>
            <param name="hashField"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.HashDelete(System.String,System.String)">
            <summary>
            从 hash 中移除指定字段
            </summary>
            <param name="redisKey"></param>
            <param name="hashField"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.HashDelete(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            从 hash 中移除指定字段
            </summary>
            <param name="redisKey"></param>
            <param name="hashFields"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.HashSet(System.String,System.String,System.String)">
            <summary>
            在 hash 设定值
            </summary>
            <param name="redisKey"></param>
            <param name="hashField"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.HashSet(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            在 hash 中设定值
            </summary>
            <param name="redisKey"></param>
            <param name="hashFields"></param>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.HashGet(System.String,System.String)">
            <summary>
            在 hash 中获取值
            </summary>
            <param name="redisKey"></param>
            <param name="hashField"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.HashGet(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            在 hash 中获取值
            </summary>
            <param name="redisKey"></param>
            <param name="hashFields"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.HashKeys(System.String)">
            <summary>
            从 hash 返回所有的字段值
            </summary>
            <param name="redisKey"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.HashValues(System.String)">
            <summary>
            返回 hash 中的所有值
            </summary>
            <param name="redisKey"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.HashSet``1(System.String,System.String,``0)">
            <summary>
            在 hash 设定值（序列化）
            </summary>
            <param name="redisKey"></param>
            <param name="hashField"></param>
            <param name="redisValue"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.HashGet``1(System.String,System.String)">
            <summary>
            在 hash 中获取值（反序列化）
            </summary>
            <param name="redisKey"></param>
            <param name="hashField"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.HashExistsAsync(System.String,System.String)">
            <summary>
            判断该字段是否存在 hash 中
            </summary>
            <param name="redisKey"></param>
            <param name="hashField"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.HashDeleteAsync(System.String,System.String)">
            <summary>
            从 hash 中移除指定字段
            </summary>
            <param name="redisKey"></param>
            <param name="hashField"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.HashDeleteAsync(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            从 hash 中移除指定字段
            </summary>
            <param name="redisKey"></param>
            <param name="hashFields"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.HashSetAsync(System.String,System.String,System.String)">
            <summary>
            在 hash 设定值
            </summary>
            <param name="redisKey"></param>
            <param name="hashField"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.HashSetAsync(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            在 hash 中设定值
            </summary>
            <param name="redisKey"></param>
            <param name="hashFields"></param>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.HashGetAsync(System.String,System.String)">
            <summary>
            在 hash 中获取值
            </summary>
            <param name="redisKey"></param>
            <param name="hashField"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.HashGetAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            在 hash 中获取值
            </summary>
            <param name="redisKey"></param>
            <param name="hashFields"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.HashKeysAsync(System.String)">
            <summary>
            从 hash 返回所有的字段值
            </summary>
            <param name="redisKey"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.HashValuesAsync(System.String)">
            <summary>
            返回 hash 中的所有值
            </summary>
            <param name="redisKey"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.HashSetAsync``1(System.String,System.String,``0)">
            <summary>
            在 hash 设定值（序列化）
            </summary>
            <param name="redisKey"></param>
            <param name="hashField"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.HashGetAsync``1(System.String,System.String)">
            <summary>
            在 hash 中获取值（反序列化）
            </summary>
            <param name="redisKey"></param>
            <param name="hashField"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.ListLeftPop(System.String)">
            <summary>
            移除并返回存储在该键列表的第一个元素
            </summary>
            <param name="redisKey"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.ListRightPop(System.String)">
            <summary>
            移除并返回存储在该键列表的最后一个元素
            </summary>
            <param name="redisKey"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.ListRemove(System.String,System.String)">
            <summary>
            移除列表指定键上与该值相同的元素
            </summary>
            <param name="redisKey"></param>
            <param name="redisValue"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.ListRightPush(System.String,System.String)">
            <summary>
            在列表尾部插入值。如果键不存在，先创建再插入值
            </summary>
            <param name="redisKey"></param>
            <param name="redisValue"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.ListLeftPush(System.String,System.String)">
            <summary>
            在列表头部插入值。如果键不存在，先创建再插入值
            </summary>
            <param name="redisKey"></param>
            <param name="redisValue"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.ListLength(System.String)">
            <summary>
            返回列表上该键的长度，如果不存在，返回 0
            </summary>
            <param name="redisKey"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.ListRange(System.String,System.Int64,System.Int64)">
            <summary>
            返回在该列表上键所对应的元素
            </summary>
            <param name="redisKey"></param>
            <param name="start"></param>
            <param name="stop"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.ListLeftPop``1(System.String)">
            <summary>
            移除并返回存储在该键列表的第一个元素
            </summary>
            <param name="redisKey"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.ListRightPop``1(System.String)">
            <summary>
            移除并返回存储在该键列表的最后一个元素
            </summary>
            <param name="redisKey"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.ListRightPush``1(System.String,``0)">
            <summary>
            在列表尾部插入值。如果键不存在，先创建再插入值
            </summary>
            <param name="redisKey"></param>
            <param name="redisValue"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.ListLeftPush``1(System.String,``0)">
            <summary>
            在列表头部插入值。如果键不存在，先创建再插入值
            </summary>
            <param name="redisKey"></param>
            <param name="redisValue"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.ListLeftPopAsync(System.String)">
            <summary>
            移除并返回存储在该键列表的第一个元素
            </summary>
            <param name="redisKey"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.ListRightPopAsync(System.String)">
            <summary>
            移除并返回存储在该键列表的最后一个元素
            </summary>
            <param name="redisKey"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.ListRemoveAsync(System.String,System.String)">
            <summary>
            移除列表指定键上与该值相同的元素
            </summary>
            <param name="redisKey"></param>
            <param name="redisValue"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.ListRightPushAsync(System.String,System.String)">
            <summary>
            在列表尾部插入值。如果键不存在，先创建再插入值
            </summary>
            <param name="redisKey"></param>
            <param name="redisValue"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.ListLeftPushAsync(System.String,System.String)">
            <summary>
            在列表头部插入值。如果键不存在，先创建再插入值
            </summary>
            <param name="redisKey"></param>
            <param name="redisValue"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.ListLengthAsync(System.String)">
            <summary>
            返回列表上该键的长度，如果不存在，返回 0
            </summary>
            <param name="redisKey"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.ListRangeAsync(System.String,System.Int64,System.Int64)">
            <summary>
            返回在该列表上键所对应的元素
            </summary>
            <param name="redisKey"></param>
            <param name="start"></param>
            <param name="stop"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.ListLeftPopAsync``1(System.String)">
            <summary>
            移除并返回存储在该键列表的第一个元素
            </summary>
            <param name="redisKey"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.ListRightPopAsync``1(System.String)">
            <summary>
            移除并返回存储在该键列表的最后一个元素
            </summary>
            <param name="redisKey"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.ListRightPushAsync``1(System.String,``0)">
            <summary>
            在列表尾部插入值。如果键不存在，先创建再插入值
            </summary>
            <param name="redisKey"></param>
            <param name="redisValue"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.ListLeftPushAsync``1(System.String,``0)">
            <summary>
            在列表头部插入值。如果键不存在，先创建再插入值
            </summary>
            <param name="redisKey"></param>
            <param name="redisValue"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.SortedSetAdd(System.String,System.String,System.Double)">
            <summary>
            SortedSet 新增
            </summary>
            <param name="redisKey"></param>
            <param name="member"></param>
            <param name="score"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.SortedSetRangeByRank(System.String,System.Int64,System.Int64,Utils.Helper.Redis.RedisHelper.OrderType)">
            <summary>
            在有序集合中返回指定范围的元素，默认情况下从低到高。
            </summary>
            <param name="redisKey"></param>
            <param name="start"></param>
            <param name="stop"></param>
            <param name="order"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.SortedSetLength(System.String)">
            <summary>
            返回有序集合的元素个数
            </summary>
            <param name="redisKey"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.SortedSetLength(System.String,System.String)">
            <summary>
            返回有序集合的元素个数
            </summary>
            <param name="redisKey"></param>
            <param name="memebr"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.SortedSetAdd``1(System.String,``0,System.Double)">
            <summary>
            SortedSet 新增
            </summary>
            <param name="redisKey"></param>
            <param name="member"></param>
            <param name="score"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.SortedSetIncrement(System.String,System.String,System.Double)">
            <summary>
            增量的得分排序的集合中的成员存储键值键按增量
            </summary>
            <param name="redisKey"></param>
            <param name="member"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.SortedSetAddAsync(System.String,System.String,System.Double)">
            <summary>
            SortedSet 新增
            </summary>
            <param name="redisKey"></param>
            <param name="member"></param>
            <param name="score"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.SortedSetRangeByRankAsync(System.String)">
            <summary>
            在有序集合中返回指定范围的元素，默认情况下从低到高。
            </summary>
            <param name="redisKey"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.SortedSetLengthAsync(System.String)">
            <summary>
            返回有序集合的元素个数
            </summary>
            <param name="redisKey"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.SortedSetRemoveAsync(System.String,System.String)">
            <summary>
            返回有序集合的元素个数
            </summary>
            <param name="redisKey"></param>
            <param name="memebr"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.SortedSetAddAsync``1(System.String,``0,System.Double)">
            <summary>
            SortedSet 新增
            </summary>
            <param name="redisKey"></param>
            <param name="member"></param>
            <param name="score"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.SortedSetIncrementAsync(System.String,System.String,System.Double)">
            <summary>
            增量的得分排序的集合中的成员存储键值键按增量
            </summary>
            <param name="redisKey"></param>
            <param name="member"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.KeyDelete(System.String)">
            <summary>
            移除指定 Key
            </summary>
            <param name="redisKey"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.KeyDelete(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            移除指定 Key
            </summary>
            <param name="redisKeys"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.KeyExists(System.String)">
            <summary>
            校验 Key 是否存在
            </summary>
            <param name="redisKey"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.KeyRename(System.String,System.String)">
            <summary>
            重命名 Key
            </summary>
            <param name="redisKey"></param>
            <param name="redisNewKey"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.KeyExpire(System.String,System.Nullable{System.TimeSpan})">
            <summary>
            设置 Key 的时间
            </summary>
            <param name="redisKey"></param>
            <param name="expiry"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.KeyDeleteAsync(System.String)">
            <summary>
            移除指定 Key
            </summary>
            <param name="redisKey"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.KeyDeleteAsync(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            移除指定 Key
            </summary>
            <param name="redisKeys"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.KeyExistsAsync(System.String)">
            <summary>
            校验 Key 是否存在
            </summary>
            <param name="redisKey"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.KeyRenameAsync(System.String,System.String)">
            <summary>
            重命名 Key
            </summary>
            <param name="redisKey"></param>
            <param name="redisNewKey"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.KeyExpireAsync(System.String,System.Nullable{System.TimeSpan})">
            <summary>
            设置 Key 的时间
            </summary>
            <param name="redisKey"></param>
            <param name="expiry"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.AddKeyPrefix(System.String)">
            <summary>
            添加 Key 的前缀
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.ConvertStrings``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            转换为字符串
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.AddRegisterEvent">
            <summary>
            添加注册事件
            </summary>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.ConnMultiplexer_ConfigurationChangedBroadcast(System.Object,StackExchange.Redis.EndPointEventArgs)">
            <summary>
            重新配置广播时（通常意味着主从同步更改）
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.ConnMultiplexer_InternalError(System.Object,StackExchange.Redis.InternalErrorEventArgs)">
            <summary>
            发生内部错误时（主要用于调试）
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.ConnMultiplexer_HashSlotMoved(System.Object,StackExchange.Redis.HashSlotMovedEventArgs)">
            <summary>
            更改集群时
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.ConnMultiplexer_ConfigurationChanged(System.Object,StackExchange.Redis.EndPointEventArgs)">
            <summary>
            配置更改时
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.ConnMultiplexer_ErrorMessage(System.Object,StackExchange.Redis.RedisErrorEventArgs)">
            <summary>
            发生错误时
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.ConnMultiplexer_ConnectionFailed(System.Object,StackExchange.Redis.ConnectionFailedEventArgs)">
            <summary>
            物理连接失败时
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.ConnMultiplexer_ConnectionRestored(System.Object,StackExchange.Redis.ConnectionFailedEventArgs)">
            <summary>
            建立物理连接时
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.Serialize(System.Object)">
            <summary>
            序列化
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Utils.Helper.Redis.RedisHelper.Deserialize``1(System.Byte[])">
            <summary>
            反序列化
            </summary>
            <typeparam name="T"></typeparam>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:Utils.Helper.Reflect.ReflectHelper">
            <summary>
            反射帮助类(调用参考,没有价值)
            创建日期:2017年8月16日
            </summary>
        </member>
        <member name="M:Utils.Helper.Reflect.ReflectHelper.LoadAssembly(System.String)">
            <summary>
            加载指定路径上的程序集文件的内容
            </summary>
            <param name="strFilePath">指定类库路径</param>
            <returns>程序集</returns>
        </member>
        <member name="M:Utils.Helper.Reflect.ReflectHelper.GetAssemblyType(System.Reflection.Assembly)">
            <summary>
            获得指定程序集类型
            </summary>
            <param name="assembly">程序集</param>
            <returns>程序集类型</returns>
        </member>
        <member name="M:Utils.Helper.Reflect.ReflectHelper.IsAssignableFrom(System.Type,System.Type)">
            <summary>
            判断程序集类型一是否实现了程序集类型二接口
            </summary>
            <param name="typeOne">程序集类型一(方法)</param>
            <param name="typeTWO">程序集类型二(接口)</param>
            <returns>实现接口返回true,未实现返回false</returns>
        </member>
        <member name="M:Utils.Helper.Reflect.ReflectHelper.CreateInstance(System.Type)">
            <summary>
            使用指定类型的默认构造函数来创建该类型的实例。
            </summary>
            <param name="type">要创建的对象的类型</param>
            <returns>对新创建对象的引用</returns>
        </member>
        <member name="M:Utils.Helper.Reflect.ReflectHelper.GetSpecifiedDirectoryFiles(System.String,System.String)">
            <summary>
            获得指定路径下文件的路径和文件名(限定后缀名)
            </summary>
            <param name="strPath">文件夹路径</param>
            <param name="strSuffixName">限定后缀名,如:"*.txt"、"*.xml"</param>
            <returns>成功返回文件全路径或文件名,失败返回NULL</returns>
        </member>
        <member name="T:Utils.Helper.Registry.RegistryHelper">
            <summary>
            注册表帮助类
            创建日期:2017年6月22日
            </summary>
        </member>
        <member name="M:Utils.Helper.Registry.RegistryHelper.CreateStartupItems(System.String,System.String)">
            <summary>
            创建注册表启动项
            </summary>
            <param name="strName">键值名称</param>
            <param name="strSoftwarePath">启动项软件路径</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:Utils.Helper.Registry.RegistryHelper.DeleteStartupItems(System.String)">
            <summary>
            删除注册表启动项
            </summary>
            <param name="strName">键值名称</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:Utils.Helper.Registry.RegistryHelper.GetAllStartupItems">
            <summary>
            获得注册表中所有启动项
            </summary>
            <returns>注册表中启动项(键值,启动路径)</returns>
        </member>
        <member name="M:Utils.Helper.Registry.RegistryHelper.CreateDesktopRightClickMenu(System.String,System.String,System.String,System.String)">
            <summary>
            创建注册表桌面右键菜单项
            </summary>
            <param name="strName">键值名称</param>
            <param name="strDisplayName">右键菜单显示名称,如果为空显示键值名称</param>
            <param name="strSoftwarePath">启动软件路径</param>
            <param name="strIcoPath">右键菜单图片路径,如果为空则不显示图片</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:Utils.Helper.Registry.RegistryHelper.CreateDesktopRightClickMenu2(System.String,System.String,System.String,System.Collections.Generic.List{Utils.Helper.Registry.SecondaryMenuModel})">
            <summary>
            创建注册表桌面右键菜单项(二级菜单)(WIN7-X64下测试通过)
            </summary>
            <param name="strName">一级菜单键值名称</param>
            <param name="strDisplayName">一级菜单右键菜单显示名称,如果为空显示键值名称</param>
            <param name="strIcoPath">一级菜单右键菜单图片路径,如果为空则不显示图片</param>
            <param name="listSecondaryMenu">二级菜单配置</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:Utils.Helper.Registry.RegistryHelper.DeleteDesktopRightClickMenu(System.String)">
            <summary>
            删除注册表桌面右键菜单项(二级菜单只删除一级菜单)
            </summary>
            <param name="strName">键值名称</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:Utils.Helper.Registry.RegistryHelper.CreateFolderRightClickMenu(System.String,System.String,System.String,System.String)">
            <summary>
            创建注册表文件夹右键菜单项
            </summary>
            <param name="strName">键值名称</param>
            <param name="strDisplayName">右键菜单显示名称,如果为空显示键值名称</param>
            <param name="strSoftwarePath">启动软件路径</param>
            <param name="strIcoPath">右键菜单图片路径,如果为空则不显示图片</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:Utils.Helper.Registry.RegistryHelper.CreateFolderRightClickMenu2(System.String,System.String,System.String,System.Collections.Generic.List{Utils.Helper.Registry.SecondaryMenuModel})">
            <summary>
            创建注册表文件夹右键菜单项(二级菜单)(WIN7-X64下测试通过)
            </summary>
            <param name="strName">一级菜单键值名称</param>
            <param name="strDisplayName">一级菜单右键菜单显示名称,如果为空显示键值名称</param>
            <param name="strIcoPath">一级菜单右键菜单图片路径,如果为空则不显示图片</param>
            <param name="listSecondaryMenu">二级菜单配置</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:Utils.Helper.Registry.RegistryHelper.DeleteFolderRightClickMenu(System.String)">
            <summary>
            删除注册表文件夹右键菜单项(二级菜单只删除一级菜单)
            </summary>
            <param name="strName">键值名称</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:Utils.Helper.Registry.RegistryHelper.CreateFileRightClickMenu(System.String,System.String,System.String,System.String)">
            <summary>
            创建注册表文件右键菜单项
            </summary>
            <param name="strName">键值名称</param>
            <param name="strDisplayName">右键菜单显示名称,如果为空显示键值名称</param>
            <param name="strSoftwarePath">启动软件路径</param>
            <param name="strIcoPath">右键菜单图片路径,如果为空则不显示图片</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:Utils.Helper.Registry.RegistryHelper.CreateFileRightClickMenu2(System.String,System.String,System.String,System.Collections.Generic.List{Utils.Helper.Registry.SecondaryMenuModel})">
            <summary>
            创建注册表文件右键菜单项(二级菜单)(WIN7-X64下测试通过)
            </summary>
            <param name="strName">一级菜单键值名称</param>
            <param name="strDisplayName">一级菜单右键菜单显示名称,如果为空显示键值名称</param>
            <param name="strIcoPath">一级菜单右键菜单图片路径,如果为空则不显示图片</param>
            <param name="listSecondaryMenu">二级菜单配置</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:Utils.Helper.Registry.RegistryHelper.DeleteFileRightClickMenu(System.String)">
            <summary>
            删除注册表文件右键菜单项(二级菜单只删除一级菜单)
            </summary>
            <param name="strName">键值名称</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:Utils.Helper.Registry.RegistryHelper.CreateSpecificFileRightClickMenu(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            创建注册表特定文件右键菜单项
            </summary>
            <param name="strFileType">特定文件类型(例:.txt|.exe)</param>
            <param name="strName">键值名称</param>
            <param name="strDisplayName">右键菜单显示名称,如果为空显示键值名称</param>
            <param name="strSoftwarePath">启动软件路径</param>
            <param name="strIcoPath">右键菜单图片路径,如果为空则不显示图片</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:Utils.Helper.Registry.RegistryHelper.CreateSpecificFileRightClickMenu2(System.String,System.String,System.String,System.String,System.Collections.Generic.List{Utils.Helper.Registry.SecondaryMenuModel})">
            <summary>
            创建注册表特定文件右键菜单项(二级菜单)(WIN7-X64下测试通过)
            </summary>
            <param name="strFileType">特定文件类型(例:.txt|.exe)</param>
            <param name="strName">一级菜单键值名称</param>
            <param name="strDisplayName">一级菜单右键菜单显示名称,如果为空显示键值名称</param>
            <param name="strIcoPath">一级菜单右键菜单图片路径,如果为空则不显示图片</param>
            <param name="listSecondaryMenu">二级菜单配置</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:Utils.Helper.Registry.RegistryHelper.DeleteSpecificFileRightClickMenu(System.String,System.String)">
            <summary>
            删除注册表特定文件右键菜单项(二级菜单只删除一级菜单)
            </summary>
            <param name="strFileType">特定文件类型(例:.txt|.exe)</param>
            <param name="strName">键值名称</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:Utils.Helper.Registry.RegistryHelper.ModifyDefaultIcon(System.String,System.String)">
            <summary>
            修改特定后缀文件默认图标(需重启电脑)
            </summary>
            <param name="strFileType">特定文件类型(例:.txt|.exe)</param>
            <param name="strIcoPath">替换图片路径</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:Utils.Helper.Registry.RegistryHelper.ModifyDefaultPrograms(System.String,System.String)">
            <summary>
            修改特定后缀文件默认程序
            </summary>
            <param name="strFileType">特定文件类型(例:.txt|.exe)</param>
            <param name="strSoftwarePath">替换程序路径</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:Utils.Helper.Registry.RegistryHelper.CreateURLProtocol(System.String,System.String)">
            <summary>
            创建 URL Protocol 协议,通过网页打开本地应用
            </summary>
            <param name="strName">键值名称</param>
            <param name="strSoftwarePath">启动软件路径</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:Utils.Helper.Registry.RegistryHelper.DeleteURLProtocol(System.String)">
            <summary>
            删除 URL Protocol 协议
            </summary>
            <param name="strName">键值名称</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="T:Utils.Helper.Registry.SecondaryMenuModel">
            <summary>
            二级菜单数据模型
            创建日期:2017年6月22日
            </summary>
        </member>
        <member name="P:Utils.Helper.Registry.SecondaryMenuModel.strSecondaryMenuName">
            <summary>
            二级菜单键值名称
            </summary>
        </member>
        <member name="P:Utils.Helper.Registry.SecondaryMenuModel.strDisplayName">
            <summary>
            二级菜单显示名称
            </summary>
        </member>
        <member name="P:Utils.Helper.Registry.SecondaryMenuModel.strSoftwarePath">
            <summary>
            二级菜单软件启动路径
            </summary>
        </member>
        <member name="P:Utils.Helper.Registry.SecondaryMenuModel.strIcoPath">
            <summary>
            二级菜单显示图片路径
            </summary>
        </member>
        <member name="T:Utils.Helper.Screenshot.ScreenshotHelper">
            <summary>
            屏幕截图帮助类
            创建日期:2017年6月21日
            </summary>
        </member>
        <member name="M:Utils.Helper.Screenshot.ScreenshotHelper.ScreenshotFullScreen">
            <summary>
            全屏幕截图
            </summary>
            <returns>截图Bitmap</returns>
        </member>
        <member name="M:Utils.Helper.Screenshot.ScreenshotHelper.ScreenshotsSpecifyLocation(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            截取指定位置截图
            </summary>
            <param name="iStartX">截取起始坐标X</param>
            <param name="iStartY">截取起始坐标Y</param>
            <param name="iInterceptWidth">截取宽度</param>
            <param name="iInterceptHeight">截取高度</param>
            <returns>截图Bitmap</returns>
        </member>
        <member name="M:Utils.Helper.Screenshot.ScreenshotHelper.SaveBitmap(System.String,System.Drawing.Bitmap)">
            <summary>
            保存屏幕截图位图到指定位置
            </summary>
            <param name="strSavePath">文件保存位置</param>
            <param name="bitmapScreenshot">屏幕截图位图</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="T:Utils.Helper.Shutdown.ShutdownHelper">
            <summary>
            Win32关机帮助类
            创建日期:2017年6月6日
            </summary>
        </member>
        <member name="M:Utils.Helper.Shutdown.ShutdownHelper.DoExitWin(System.Int32)">
            <summary>
            关闭Windows
            </summary>
            <param name="flg"></param>
        </member>
        <member name="M:Utils.Helper.Shutdown.ShutdownHelper.Shutdown">
            <summary>
            关闭计算机
            </summary>
        </member>
        <member name="M:Utils.Helper.Shutdown.ShutdownHelper.Logoff">
            <summary>
            注销计算机
            </summary>
        </member>
        <member name="M:Utils.Helper.Shutdown.ShutdownHelper.Reboot">
            <summary>
            重启计算机
            </summary>
        </member>
        <member name="T:Utils.Helper.Taskschd.TaskschdHelper">
            <summary>
            任务计划帮助类
            创建日期:2017年9月18日
            </summary>
        </member>
        <member name="M:Utils.Helper.Taskschd.TaskschdHelper.CreateTaskschd(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            创建任务计划
            </summary>
            <param name="strCreator">作者</param>
            <param name="strTaskName">任务名称</param>
            <param name="strPath">任务计划路径</param>
            <param name="strInterval">任务触发时间(PT1M:1分钟,PT1H30M:90分钟)</param>
            <param name="strStartBoundary">任务开始时间(yyyy-MM-ddTHH:mm:ss)</param>
            <param name="strDescription">任务描述</param>
            <returns>任务状态</returns>
        </member>
        <member name="M:Utils.Helper.Taskschd.TaskschdHelper.DeleteTaskschd(System.String)">
            <summary>
            删除任务计划
            </summary>
            <param name="strTaskName">任务计划名称</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:Utils.Helper.Taskschd.TaskschdHelper.GetAllTaskschd">
            <summary>
            获得所有任务计划
            </summary>
            <returns>所有任务计划</returns>
        </member>
        <member name="M:Utils.Helper.Taskschd.TaskschdHelper.IsExists(System.String)">
            <summary>
            任务计划是否存在
            </summary>
            <param name="strTaskName">任务计划名称</param>
            <returns></returns>
        </member>
        <member name="T:Utils.Helper.TXT.TXTHelper">
            <summary>
            TXT文本帮助类
            创建日期:2016年12月8日
            </summary>
        </member>
        <member name="M:Utils.Helper.TXT.TXTHelper.WriteFile(System.String,System.String)">
            <summary>
            写入文本到TXT(如果有文件不进行操作)
            </summary>
            <param name="strPath">TXT储存路径</param>
            <param name="strTXT">文本内容</param>
            <returns>成功返回0,失败返回-1</returns>
        </member>
        <member name="M:Utils.Helper.TXT.TXTHelper.WriteFile(System.String,System.String,System.Boolean)">
            <summary>
            写入文本到TXT(选择是否覆盖)
            </summary>
            <param name="strPath">TXT储存路径</param>
            <param name="strTXT">文本内容</param>
            <param name="boolCover">(true)如果冲突覆盖文件,(false)如果冲突不进行操作</param>
            <returns>成功返回0,失败返回-1</returns>
        </member>
        <member name="M:Utils.Helper.TXT.TXTHelper.AppendFile(System.String,System.String)">
            <summary>
            写入文本到TXT,追加写入文件(如果不存在自动创建)
            </summary>
            <param name="strPath">TXT储存路径</param>
            <param name="strTXT">文本内容</param>
            <returns>成功返回0,失败返回-1</returns>
        </member>
        <member name="M:Utils.Helper.TXT.TXTHelper.AppendFile(System.String,System.String,System.Boolean)">
            <summary>
            写入文本到TXT,追加写入文件(如果不存在自动创建)(是否换行)
            </summary>
            <param name="strPath">TXT储存路径</param>
            <param name="strTXT">文本内容</param>
            <param name="boolWrap">(true)换行,(false)不换行</param>
            <returns>成功返回0,失败返回-1</returns>
        </member>
        <member name="M:Utils.Helper.TXT.TXTHelper.Logs(System.String)">
            <summary>
            ADO.Helper帮助类日志文件
            </summary>
            <param name="strLogs">异常信息</param>
            <returns>成功返回0,失败返回-1</returns>
        </member>
        <member name="M:Utils.Helper.TXT.TXTHelper.GetFileString(System.String)">
            <summary>
            读取TXT文件中的文本
            </summary>
            <param name="strPath">TXT文件路径</param>
            <returns>TXT文件中的文本</returns>
        </member>
        <member name="M:Utils.Helper.TXT.TXTHelper.GetFileArray(System.String)">
            <summary>
            读取TXT文件中的文本(按照每行存到string[]中)
            </summary>
            <param name="strPath">TXT文件路径</param>
            <returns>TXT文件中的文本(string[])</returns>
        </member>
        <member name="M:Utils.Helper.TXT.TXTHelper.GetFileList(System.String)">
            <summary>
            读取TXT文件中的文本(按照每行存到listString中)
            </summary>
            <param name="strPath">TXT文件路径</param>
            <returns>TXT文件中的文本(listString)</returns>
        </member>
        <member name="T:Utils.Helper.WaitingMessage.WaitForm">
            <summary>
            等待窗体
            </summary>
        </member>
        <member name="M:Utils.Helper.WaitingMessage.WaitForm.#ctor">
            <summary>
            WaitForm 的构造函数
            </summary>
        </member>
        <member name="P:Utils.Helper.WaitingMessage.WaitForm.ProgressInfo">
            <summary>
            处理进度信息
            </summary>
        </member>
        <member name="M:Utils.Helper.WaitingMessage.WaitForm.Refresh">
            <summary>
            刷新页面
            </summary>
        </member>
        <member name="F:Utils.Helper.WaitingMessage.WaitForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Utils.Helper.WaitingMessage.WaitForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Utils.Helper.WaitingMessage.WaitForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Utils.Helper.WaitingMessage.WaitForm.lblProgressInfo">
            <summary>
            进度信息
            </summary>
        </member>
        <member name="T:Utils.Helper.WaitingMessage.WaitMessage">
            <summary>
            等待消息窗口
            </summary>
        </member>
        <member name="F:Utils.Helper.WaitingMessage.WaitMessage.wait">
            <summary>
            创建窗体
            </summary>
        </member>
        <member name="F:Utils.Helper.WaitingMessage.WaitMessage.openprogress">
            <summary>
            打开进展
            </summary>
        </member>
        <member name="M:Utils.Helper.WaitingMessage.WaitMessage.Show(System.String)">
            <summary>
            显示等待状态
            </summary>
            <param name="title">标题</param>
        </member>
        <member name="M:Utils.Helper.WaitingMessage.WaitMessage.Show(System.String,System.Drawing.Size)">
            <summary>
            显示等待状态
            </summary>
            <param name="title">标题</param>
            <param name="size">大小</param>
        </member>
        <member name="M:Utils.Helper.WaitingMessage.WaitMessage.Close">
            <summary>
            关闭
            </summary>
        </member>
        <member name="M:Utils.Helper.WaitingMessage.WaitMessage.innerShow(System.String,System.Drawing.Size)">
            <summary>
            等待状态
            </summary>
            <param name="title">标题</param>
            <param name="size">窗体大小</param>
        </member>
        <member name="M:Utils.Helper.WaitingMessage.WaitMessage.innerShowForm">
            <summary>
            线程上执行的方法
            </summary>
        </member>
        <member name="T:Utils.Helper.WebApi.HttpClientHelper">
            <summary>
            HttpClient帮助类
            创建日期:2018年8月27日
            </summary>
        </member>
        <member name="M:Utils.Helper.WebApi.HttpClientHelper.CreateGetHttpClient(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            创建Get请求
            </summary>
            <param name="url">Api访问地址</param>
            <param name="requestUrl">详细方法路径</param>
            <param name="parameters">请求参数</param>
            <returns>Api返回值</returns>
        </member>
        <member name="M:Utils.Helper.WebApi.HttpClientHelper.CreatePostHttpClient(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            创建Post请求
            </summary>
            <param name="url">Api访问地址</param>
            <param name="requestUrl">详细方法路径</param>
            <param name="parameters">请求参数</param>
            <returns>Api返回值</returns>
        </member>
        <member name="T:Utils.Helper.WebApi.HttpWebRequestHelper">
            <summary>
            HttpWebRequest帮助类
            创建日期:2018年8月27日
            </summary>
        </member>
        <member name="M:Utils.Helper.WebApi.HttpWebRequestHelper.CreateGetHttpWebRequest(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            创建Get请求
            </summary>
            <param name="url">Api访问地址</param>
            <param name="requestUrl">详细方法路径</param>
            <param name="parameters">请求参数</param>
            <returns>Api返回值</returns>
        </member>
        <member name="M:Utils.Helper.WebApi.HttpWebRequestHelper.CreatePostHttpWebRequest(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            创建Post请求
            </summary>
            <param name="url">Api访问地址</param>
            <param name="requestUrl">详细方法路径</param>
            <param name="parameters">请求参数</param>
            <returns>Api返回值</returns>
        </member>
    </members>
</doc>
